7 17 19:40:41 <item4>	안녕하세요. 아직 많은분들이 안오셨네요
7 17 19:41:05 <item4>	그래도 일단 시작해보려고 합니다
7 17 19:41:34 *	wk has quit (Quit: )
7 17 19:41:43 <item4>	음..
7 17 19:41:48 *	변태중년_ has quit (Ping timeout: 121 seconds)
7 17 19:41:51 <item4>	일단 지난시간 과제부터 다시 풀어보도록 하겠습니다
7 17 19:42:15 <item4>	지난시간 과제는 화씨를 섭씨로 변환하는 문제였는데요
7 17 19:42:20 <grimb>	네
7 17 19:42:29 <item4>	과제는 다들 해보셨나요?
7 17 19:42:35 <ellif_w7>	저는 했습니다.
7 17 19:42:42 <lyn>	네
7 17 19:42:43 <dcdc>	하다가 에러가 많아서... 그냥 놓은 상태입니다.
7 17 19:42:55 <item4>	아, 반대로 말했군요. 섭씨를 화씨로네요
7 17 19:43:10 <grimb>	네 해 보았습니다.
7 17 19:43:18 <item4>	이번 과제가 난이도가 급상승했다는 말이 나와서
7 17 19:43:33 <item4>	이번 과제는 한번 다시 짚어보고, 응용 문제를 풀어보는식으로 해보도록 하겠습니다
7 17 19:43:57 <item4>	과제를 푸신분은 자신의 소스를 봐주시고
7 17 19:44:08 <item4>	과제를 못푸신분은 기본이 되는 소스를 열어주세요
7 17 19:44:09 *	wk (wk@*.*.*.*) has joined
7 17 19:44:09 *	ㅇㅈㅇ gives voice to wk
7 17 19:44:45 <item4>	시작하겠습니다
7 17 19:44:50 <grimb>	네
7 17 19:45:52 <item4>	먼저, 섭씨를 화씨로 바꾸려면
7 17 19:45:55 <item4>	공식을 알아야합니다
7 17 19:46:01 <item4>	공식은 그래서 안내를 드렸는데요
7 17 19:46:08 <item4>	°F = °C × 1.8 + 32
7 17 19:46:27 <item4>	여기서 °F 는 화씨를, °C는 섭씨를 말합니다
7 17 19:46:36 <item4>	int C=100;
7 17 19:46:45 <item4>	우리는 여기서 int형 변수 C를
7 17 19:46:47 *	mathieu (mathieu@*.*.*.*) has joined
7 17 19:46:47 *	ㅇㅈㅇ gives voice to mathieu
7 17 19:46:53 <item4>	섭씨 온도라고 가정하도록 하겠습니다
7 17 19:47:12 <item4>	그렇다면, 저기 섭씨 온도자리에
7 17 19:47:13 <grimb>	네
7 17 19:47:23 <item4>	변수 C를 대입하면 어떨까요
7 17 19:47:49 <item4>	F라는 변수에는 화씨를 저장하기로 했으니
7 17 19:48:01 <item4>	F=~~~; 의 형태가 한번은 나올것입니다
7 17 19:48:15 <item4>	마침 화씨가 좌변에 있으니 그대로 이용해보겠습니다
7 17 19:48:30 <item4>	F=C × 1.8 + 32
7 17 19:48:36 <item4>	x를 *로 바꾸면
7 17 19:48:48 <item4>	F=C*1.8+32가됩니다
7 17 19:49:25 <item4>	자, 그럼 이제 저장해서 정말 이대로 완성인건지 확인해볼까요?
7 17 19:50:22 <item4>	http://codepad.org/rhYT9j7b
7 17 19:50:27 <item4>	이렇게 해봅시다
7 17 19:51:25 <item4>	실행하면 몇이 나오나요?
7 17 19:51:38 <grimb>	212.000000
7 17 19:51:57 <lyn>	저렇게요
7 17 19:52:06 <item4>	네. 네이버에 검색해보셔도 알 수 있지만
7 17 19:52:10 <item4>	섭씨 100도는
7 17 19:52:13 <item4>	화씨 212도입니다
7 17 19:52:22 <item4>	문제의 답은 이것이었습니다
7 17 19:52:30 <item4>	여기서, 질문받겠습니다
7 17 19:52:45 <dcdc>	int main()
7 17 19:52:47 <dcdc>	{
7 17 19:52:47 <dcdc>		int C=100;
7 17 19:52:48 <dcdc>		float F;
7 17 19:52:49 <dcdc>		
7 17 19:52:51 <dcdc>		F=C*1.8+32
7 17 19:52:52 <dcdc>		
7 17 19:52:54 <dcdc>		printf("%f",F)
7 17 19:52:56 <dcdc>		
7 17 19:52:58 <dcdc>		return 0;
7 17 19:53:00 <dcdc>	}
7 17 19:53:02 <dcdc>	헉... 죄송합니다. ㅡㅡ;;
7 17 19:53:10 <item4>	괜찮습니다
7 17 19:53:16 <item4>	자, 지금 소스에서 뭐가 빠졌을까요
7 17 19:53:33 <lyn>	;요?
7 17 19:53:37 <item4>	각 구문은 ;로 끝내야 합니다
7 17 19:53:37 <grimb>		printf("섭씨 %i 도는 화씨 %f 도입니다.",C,F);
7 17 19:54:15 <item4>	즉, F=C*1.8+32 가 아니라
7 17 19:54:18 <item4>	F=C*1.8+32; 입니다
7 17 19:55:07 <item4>	같은 이유로 printf("%f",F)도
7 17 19:55:14 <item4>	printf("%f",F);라고 ;를 붙여주셔야만 합니다
7 17 19:55:36 <item4>	다른 질문은 있는지요
7 17 19:56:19 <dcdc>	저는 섭씨 d도는... 이라고 나오는데요?
7 17 19:57:03 <lyn>	%d라고 쓰시면 될거같아요
7 17 19:57:03 <item4>	소스 전체를 codepad.org로 올려주세요
7 17 19:58:09 <dcdc>	아하~ 되네요!
7 17 19:58:20 <item4>	자, 비슷한 문제 한번 풀어보겠습니다
7 17 19:58:37 <item4>	이번엔 화씨를 섭씨로 바꿔보도록 하겠습니다
7 17 19:59:08 <item4>	화씨를 섭씨로 바꾸는 공식은 °C = (°F - 32) / 1.8 입니다
7 17 19:59:12 <item4>	int F;
7 17 19:59:15 <item4>	float C;
7 17 19:59:18 <item4>	이 환경에서
7 17 19:59:24 <item4>	화씨 123도는 
7 17 19:59:32 <item4>	섭씨 몇도인지 구하는 소스를 짜보도록 하겠습니다
7 17 20:00:09 <item4>	8시 5분까지 혼자서 짜보고 같이 맞추보도록 하겠습니다
7 17 20:05:12 <item4>	5분이네요
7 17 20:05:17 <item4>	다들 답은 구하셨는지요
7 17 20:05:29 <dcdc>	또 못풀었네요... ㅡㅡ;;
7 17 20:05:44 <lyn>	칸이 비어서 나타나네요... 뭐가 잘못된걸까
7 17 20:06:09 <item4>	같이 풀어보도록 하겠습니다
7 17 20:06:09 <lyn>	50.555557eh
7 17 20:06:11 <lyn>	도 요
7 17 20:06:24 <item4>	int F=123; 일테고
7 17 20:06:30 <item4>	float C; 입니다
7 17 20:06:38 <dcdc>	저는 화씨 50.555557 도는 섭씨 {도입니다. 로 나와요.
7 17 20:06:53 <item4>	음
7 17 20:07:04 <item4>	dcdc, printf 한줄만 복사해서 여기로 붙여넣어주세요
7 17 20:07:39 <dcdc>	printf("화씨 %f 도는 섭씨 %c도 입니다.",F,C);
7 17 20:07:57 <item4>	지난시간 내용 복습인데요
7 17 20:08:09 <item4>	정수 출력은 %d, 문자 출력은 %c 입니다
7 17 20:08:21 <lyn>	아 그렇구나....
7 17 20:08:27 <item4>	%c를 %d로 바꾸셔야 합니다
7 17 20:08:43 <item4>	위에서 %i를 쓰신분이 계신데, %i도 가능합니다
7 17 20:09:09 <item4>	하지만 여러개를 오가면서 쓰면 햇갈리므로 저는 일괄적으로 %d만 사용하도록 하겠습니다
7 17 20:09:27 <item4>	자, 답은 모두 구하신건가요
7 17 20:09:37 <lyn>	네
7 17 20:09:38 <item4>	섭씨 123도는 50.55... 도입니다
7 17 20:09:45 <dcdc>	ㅡㅡ;;
7 17 20:10:04 <item4>	이 두번의 문제를 통해서
7 17 20:10:12 <item4>	공식 속에 대입하는 연습을 해봤습니다
7 17 20:10:25 <item4>	그런데, 실제로 온도를 계산해야할 일이 있다면
7 17 20:10:32 <item4>	지금같은 방식은 너무 불편합니다
7 17 20:10:41 <item4>	매번 소스를 고치고 컴파일하고 할 수는 없지요
7 17 20:11:04 <item4>	이제부터 정말 내가 프로그램을 만들고 있구나 싶은 일을 해보도록 하겠습니다
7 17 20:11:27 <item4>	다시, 섭씨를 화씨로 바꾸는 소스를 켜셔서
7 17 20:11:30 <item4>	개조를 해보도록 하게
7 17 20:11:33 <item4>	하겠습니다
7 17 20:12:07 <item4>	일단 여기선 먼저 소스를 보도록 하겠습니다
7 17 20:12:48 <item4>	http://codepad.org/uTbLR84S
7 17 20:12:56 <item4>	이 소스를 보면서 다른점을 찾아봅시다
7 17 20:13:59 <grimb>	scanf 가 다릅니다.
7 17 20:14:41 <item4>	int C;
7 17 20:14:45 <item4>	초기화 값을 빼버렸고
7 17 20:14:51 <item4>	scanf("%d",&C);
7 17 20:14:58 <item4>	처음 보는 표현이 하나 생겼습니다
7 17 20:15:23 <item4>	자, 일단 이름에서 보기에
7 17 20:15:25 <item4>	scan
7 17 20:15:30 <item4>	스캐너 같은 일을 하는것 같습니다
7 17 20:15:40 <item4>	f는 printf때처럼 포맷입니다
7 17 20:15:54 <item4>	그리고 앞엔 정말 포맷 문자열이 있습니다
7 17 20:16:25 <item4>	%d는
7 17 20:16:31 <item4>	좀전에 복습했듯
7 17 20:16:37 <item4>	정수 관련 포맷입니다
7 17 20:16:41 <item4>	그리고 쉼표 다음에는
7 17 20:16:48 <item4>	변수 C는 C인데
7 17 20:16:52 <item4>	&가 붙어있습니다
7 17 20:17:00 <item4>	&는 또 뭘까요
7 17 20:17:05 <item4>	일단 궁금한게 많겠지만
7 17 20:17:13 <item4>	저장하고 컴파일 후 실행을 해봅시다
7 17 20:17:44 <item4>	어떻게 나오나요?
7 17 20:19:20 <grimb>	아무것도 안 나옵니다. ㅠㅠ
7 17 20:19:24 <lyn>	아무것도..
7 17 20:19:34 <item4>	그런데 평소와 좀 다르지 않나요
7 17 20:19:45 <item4>	보통은 엔터를 치면 바로 꺼졌을텐데
7 17 20:19:49 <item4>	이젠 엔터를 쳐도 됩니다
7 17 20:19:55 <grimb>	계속 돌아가고 있습니다.
7 17 20:20:01 <item4>	자, 100을 써봅시다
7 17 20:20:06 <lyn>	오
7 17 20:20:07 <item4>	100이라 적고 엔터를 쳐보세요
7 17 20:20:17 <lyn>	뜨네요
7 17 20:20:20 <lyn>	212.000000
7 17 20:20:33 <dcdc>	저도요
7 17 20:20:49 <item4>	자, 이번엔 다시 끄고 실행해서
7 17 20:20:53 <grimb>	무슨 의미인지 감이 옵니다.
7 17 20:20:54 <item4>	256을 넣어봅시다
7 17 20:21:46 <item4>	이번엔 어떻게 나오시나요
7 17 20:21:56 <grimb>	492.799988
7 17 20:22:14 <dcdc>	492.799988
7 17 20:22:21 <lyn>	저도 저렇게
7 17 20:22:31 <item4>	네. 계산 결과가 나오는것을 볼 수 있습니다
7 17 20:23:10 <item4>	그런데, 뭘 써야하는건지 얼핏봐선 파악이 안되니까
7 17 20:23:18 <item4>	약간의 가공을 해보도록 하겠습니다
7 17 20:23:27 <lyn>	입력어가 소수면 잘라먹는군요...
7 17 20:24:06 <item4>	http://codepad.org/H8DUkNXe
7 17 20:24:08 <item4>	이렇게
7 17 20:24:13 <item4>	한줄만 추가해보도록 하겠습니다
7 17 20:24:56 <lyn>	오류나네요
7 17 20:25:05 <lyn>	아차
7 17 20:25:19 <lyn>	폼이 생겼네요
7 17 20:25:33 <item4>	뭘 쓰라는건지 알 수 있게 되었습니다
7 17 20:25:36 <dcdc>	오~
7 17 20:25:39 <dcdc>	뭔가 하네요...
7 17 20:25:47 <item4>	이제 좀 프로그램을 만들고 있다는 느낌이 드시나요?
7 17 20:26:01 <lyn>	네 ㅎㅎ
7 17 20:26:05 <dcdc>	네...
7 17 20:26:10 <dcdc>	느낌만... ^^;;
7 17 20:26:26 <item4>	그럼 이제
7 17 20:26:35 <item4>	과연 scanf가 뭐길래
7 17 20:26:43 <item4>	우리가 프로그램을 만드는 느낌이 들게 해줬는지
7 17 20:26:49 <item4>	뜯어보도록 하겠습니다
7 17 20:26:57 <ellif_w7>	자
7 17 20:26:59 <ellif_w7>	돌아왔습ㄴ다
7 17 20:27:03 <ellif_w7>	지금부터 대충 뜯어보겠습니다.
7 17 20:27:05 <item4>	scanf("%d",&C);
7 17 20:27:10 <item4>	형식은
7 17 20:27:25 <item4>	scanf(형식문자열,변수주소,변수주소....)
7 17 20:27:28 <item4>	이런 형식입니다
7 17 20:27:35 <item4>	처음 보는 용어가 나왔습니다
7 17 20:27:39 <item4>	변수주소는 뭘까요?
7 17 20:28:17 <item4>	아무거나 생각나는데로 질러주세요
7 17 20:28:26 <lyn>	입력방식?
7 17 20:29:03 <item4>	음. 다른 아이디어는 없으신가요
7 17 20:29:24 <lyn>	C에 입력해라
7 17 20:29:32 <ellif_w7>	그 뭐라고 해야 하나
7 17 20:29:37 <lyn>	형식문자열을 &변수주소에 입력해라
7 17 20:29:41 <ellif_w7>	루비 같은데는
7 17 20:29:59 <ellif_w7>	Def a = [0, 3, 7] 이런 식으로
7 17 20:30:12 <ellif_w7>	하나의 변수에 여러개를 기억할 수 있지 않나요?
7 17 20:30:25 <item4>	지금은 루비 시간이 아니므로 루비는 넘어가도록 하죠
7 17 20:30:38 <ellif_w7>	그것과 비슷한 이치인지 묻고 있는 것입니다.
7 17 20:30:45 <item4>	음.. 다릅니다
7 17 20:31:23 <dcdc>	루비도 배우고 싶어요.
7 17 20:31:34 <lyn>	변수주소... 변수가 들어갈 위치 지정
7 17 20:31:39 <item4>	저도 루비는 모릅니다. 개인적으로 파이썬이 좋아서..
7 17 20:31:44 <item4>	자, 다시 본론으로 돌아와서
7 17 20:31:56 <item4>	변수주소가 무엇인지 한단어로 설명하면 이겁니다
7 17 20:31:58 <item4>	포인터
7 17 20:32:12 <item4>	C언어의 최고 보스 몬스터쯤으로 취급받는 녀석입니다
7 17 20:32:23 <item4>	시작한지 3주밖에 안됬는데 벌써 포인터가 나오냐고 할지 모르는데요
7 17 20:32:41 <ellif_w7>	그게 뭔지 모르겠네요.
7 17 20:32:48 <item4>	포인터의 세계에 들어가지 않으니까 걱정 안하셔도 되고
7 17 20:32:50 <lyn>	ㅎㅎㅎㅎ
7 17 20:32:57 <item4>	일단 포인터의 개념만 알아보도록 하겠습니다
7 17 20:33:12 <item4>	일단 쉽계 예를 들겠습니다
7 17 20:33:27 <item4>	변수를 그릇이라고 설명했었는데 기억하시나요
7 17 20:33:47 <grimb>	네
7 17 20:33:52 <dcdc>	네 그건 기억나네요.
7 17 20:34:09 <item4>	조금 더 요란하게 생각해서
7 17 20:34:18 <item4>	변수를 그릇을 들고있는 사람이라고 생각해봅시다
7 17 20:34:58 <item4>	사람은 편하게 한국인이라고 치죠
7 17 20:35:10 <item4>	우리는 이제까지 섭씨온도 C란 사람도 봤고
7 17 20:35:16 <item4>	화씨온도 F도 봤습니다
7 17 20:35:38 <item4>	근데, 이사람들은 각각
7 17 20:35:43 <item4>	주민등록번호를 가지고 있습니다
7 17 20:36:15 <item4>	그럼, C란 변수도 주민번호가 있고
7 17 20:36:22 <item4>	F란 변수도 주민번호가 있겠죠?
7 17 20:36:37 <grimb>	네
7 17 20:36:53 <item4>	그냥 C라고 쓰면 그 자리에
7 17 20:37:03 <item4>	C란 사람이 들고있는 그릇의 내용이 들어갑니다
7 17 20:37:13 <item4>	그런데 그 앞에다가 &를 붙이면
7 17 20:37:17 <item4>	&C가되죠?
7 17 20:37:28 <item4>	&C는 C란 사람의 주민등록번호가 들어갑니다
7 17 20:37:45 <item4>	scanf는 입력을 받아서
7 17 20:37:54 <item4>	저장을 시켜주는 역할을 하는데
7 17 20:38:04 <item4>	C의 값은 C의 주민등록번호가 아니잖아요
7 17 20:38:10 <item4>	C라는 사람에게 줘야하는거니
7 17 20:38:16 <item4>	C의 주민등록번호를 알려주는겁니다
7 17 20:38:24 <item4>	이해 되시나요?
7 17 20:38:51 <grimb>	어렴풋이 이해가 되려고 합니다. a;;
7 17 20:39:11 <item4>	그러니까 이런겁니다
7 17 20:39:15 <item4>	택배를 보내려면
7 17 20:39:18 <item4>	주소를 알려줘야지
7 17 20:39:28 <item4>	이름만 알려줘선 찾아갈 수 없는겁니다
7 17 20:39:55 <item4>	여기서, 제가 주민등록번호라고 말한걸
7 17 20:39:58 <item4>	포인터라고 합니다
7 17 20:40:02 <grimb>	무슨 말씀인지 알겠습니다.
7 17 20:40:33 <item4>	실제로 포인터는
7 17 20:40:40 <item4>	각 변수의 주소를 가르키고 있는데요
7 17 20:40:44 <item4>	여기서 주소라고 하는건
7 17 20:40:52 <item4>	메모리.. 그러니까 RAM에 있는 공간의
7 17 20:40:55 <item4>	주소를 말합니다
7 17 20:41:03 <item4>	컴퓨터 안에 있는 저장공간에
7 17 20:41:09 <item4>	각각 주민번호가 있다고 생각하면 됩니다
7 17 20:41:32 <item4>	자세한것은 자료구조에 들어가면 더 알게되니 이정도로 포인터 개론(?)을 마치려 하는데
7 17 20:41:34 <item4>	질문 있으신가요
7 17 20:42:38 <item4>	어렵거나 이해 안되는 부분 있으면 지금 말씀해주세요
7 17 20:42:45 <item4>	안그러면 나중가서 막혀요
7 17 20:42:55 <lyn>	그러니까 간단히, 입력한 값을 넣을 그릇을 지정하는거 아닌가요?
7 17 20:43:01 <item4>	네. 그렇습니다
7 17 20:43:13 <lyn>	아 맞구나;
7 17 20:43:16 <lyn>	그럼 알겠습니다
7 17 20:44:47 <item4>	계속 진행해도 될까요?
7 17 20:44:54 <grimb>	네
7 17 20:44:56 <lyn>	전 괜찮습니다만..
7 17 20:45:00 <Jstring>	넵
7 17 20:45:35 <item4>	그럼, 이번엔 좀 새로운걸 만들어보겠습니다
7 17 20:45:42 <item4>	이에 앞서 먼저
7 17 20:45:56 <item4>	우리가 무심코 쓰고있는 산술식을 좀 다시 훑어볼텐데요
7 17 20:46:02 <item4>	우리는 지금까지 아무렇지도 않게
7 17 20:46:09 <item4>	+ - * /를
7 17 20:46:13 <item4>	그냥 썼습니다
7 17 20:46:28 <item4>	보통 강의할때 더할때는 뭐.. 이런식으로 설명해주기도 하지만
7 17 20:46:41 <item4>	일단 자연스럽게 쓴다는 느낌으로 아무 터치 안하고 넘어왔는데요
7 17 20:46:46 <item4>	자, 당연한거지만
7 17 20:46:52 <item4>	1+2*3은 몇일까요
7 17 20:46:57 <grimb>	7
7 17 20:47:04 <lyn>	7이요
7 17 20:47:05 <Jstring>	7입니다
7 17 20:47:12 <item4>	이유는 
7 17 20:47:17 <lyn>	*/가 먼저니까
7 17 20:47:18 <item4>	+보다 *가 우선되기 때문인데요
7 17 20:47:19 <grimb>	곱하기부터 해야 하니까요
7 17 20:47:23 <item4>	여기서
7 17 20:47:27 <item4>	+ 나 * 같은걸
7 17 20:47:30 <item4>	연산자 라고 부릅니다
7 17 20:47:40 <item4>	그리고 + * 이런게
7 17 20:47:44 <item4>	어떤게 먼저 될지를 말하는게
7 17 20:47:48 <item4>	연산자 우선순위입니다
7 17 20:48:07 <item4>	대학 교수들은 악질이라 이걸 달달 외우게 만드려고 드는 분도 있다고 들었는데
7 17 20:48:15 <item4>	어렵게 외우기까지 할 필요는 없고
7 17 20:48:22 <item4>	우리가 생각나는 느낌과 유사합니다
7 17 20:48:30 <item4>	그럼 오늘은
7 17 20:48:36 <item4>	새로운 연산자를 하나 알아보겠습니다
7 17 20:48:48 <item4>	%
7 17 20:48:51 <item4>	라는 연산자입니다
7 17 20:49:01 <item4>	수학시간에 % 라는건
7 17 20:49:05 <item4>	본 적이 없을겁니다
7 17 20:49:15 <item4>	사실 컴퓨터에서만 쓰이는 연산자입니다
7 17 20:49:22 <item4>	이것은, 쉽게 말하면
7 17 20:49:26 <item4>	나머지를 알려줍니다
7 17 20:49:34 <item4>	역시, 실제로 보는편이 더 빠르겠지요
7 17 20:49:40 <item4>	이번엔 별도의 파일을 만들진 않고
7 17 20:49:46 <item4>	냐옹이라는 봇을 통해 계산해볼겁니다
7 17 20:49:57 <item4>	!c printf("%d",5%3);
7 17 20:50:00 <냐옹이>	2
7 17 20:50:13 <item4>	5%3을 출력시켰더니
7 17 20:50:16 <item4>	2가 나왔습니다
7 17 20:50:19 <grimb>	아 그렇군요 ㅎㅎ
7 17 20:50:28 <item4>	5를 3으로 나눈 나머지를 구해주는게
7 17 20:50:30 <item4>	%입니다
7 17 20:50:34 <item4>	자, 몇개 더 해보죠
7 17 20:50:40 <item4>	!c printf("%d",9%3);
7 17 20:50:42 <냐옹이>	0
7 17 20:50:51 <item4>	9를 3으로 나누면 나머지는 0입니다
7 17 20:50:54 <lyn>	냐옹이가 계산하는데도 시간이 약간 걸리네요...
7 17 20:50:59 <item4>	!c printf("%d",13%3);
7 17 20:51:02 <냐옹이>	1
7 17 20:51:09 <item4>	13을 3으로 나누면 나머지는 1입니다
7 17 20:51:23 <item4>	아, 냐옹이는 외부 서버를 거쳐서 계산을 하는거라
7 17 20:51:26 <item4>	응답 속도가 느린겁니다
7 17 20:51:30 <lyn>	아하
7 17 20:51:37 <item4>	실제 직접 해보시면 이렇게 느리지는 않습니다
7 17 20:52:04 <item4>	다만, 이건 프로그램.. 아니 컴퓨터 구조에 대한 이야기인데
7 17 20:52:14 <item4>	컴퓨터는 나누기와 나머지 구하기가
7 17 20:52:16 <item4>	느립니다
7 17 20:52:21 <item4>	특히 나누기는 매우 느립니다
7 17 20:52:29 <lyn>	주산 쓰나보군요...
7 17 20:52:34 <lyn>	주판
7 17 20:52:39 <item4>	주판 비슷합니다
7 17 20:52:49 <item4>	자세한 원리는 설명하려면 제가 지쳐 쓰러지므로 넘어가겠습니다
7 17 20:53:02 <lyn>	네 대강 느낌을 알겠어요 ㅎㅎ
7 17 20:53:05 <item4>	자, 이런걸 배워서 뭐에 쓰냐는 질문을 받았는데요
7 17 20:53:06 <lyn>	느낌은 
7 17 20:53:10 <item4>	바로 실전에 투입해보겠습니다
7 17 20:53:34 <item4>	이제 여러분은 은행원이 되는겁니다
7 17 20:53:46 <item4>	제가 가서 예를들어서 1500원 인출해주세요 라고 말하면
7 17 20:53:56 <item4>	제가 가져가기 쉽게
7 17 20:54:05 <item4>	1000원짜리 1장과 500원짜리 1개를 줘야합니다
7 17 20:54:22 <item4>	그럼 17600원이면 어떻게 줘야할까요
7 17 20:54:55 <lyn>	1만 1, 5천 1, 1천 2, 5백 1, 1백 1
7 17 20:55:10 <item4>	자, 이제 이걸 컴퓨터에게 시켜보도록 하겠습니다
7 17 20:55:11 <grimb>	만원짜리 1장 오천원짜리 1장 천원짜리 2장 오백원짜리 1개 백원짜리 1개
7 17 20:55:29 <item4>	일단 이 문제를 어떻게 풀지를 생각해봐야합니다
7 17 20:55:41 <item4>	현금은 정수입니다
7 17 20:55:48 <item4>	0.43원 이런건 우리나라엔 없죠
7 17 20:55:55 <item4>	입력은 정수라고 봐야겠죠
7 17 20:56:07 <item4>	입력을 input이란 변수로 저장한다고 하면
7 17 20:56:10 <item4>	int input;
7 17 20:56:14 <item4>	한줄 만들었습니다
7 17 20:56:28 <item4>	입력을 받아야하니 scanf("%d",&input);
7 17 20:56:31 <item4>	이 필요하겠죠
7 17 20:56:37 <item4>	그다음부터가 문제입니다
7 17 20:56:42 <item4>	나눠서 줘야하는데
7 17 20:56:46 <item4>	이걸 어떻게 하느냐
7 17 20:57:08 <item4>	자, 우리가 이걸 어떻게 생각하는지
7 17 20:57:12 <item4>	생각의 흐름을 생각해봅시다
7 17 20:57:16 <item4>	17600원입니다
7 17 20:57:21 <item4>	가장먼저 보이는건 만원입니다
7 17 20:57:33 <item4>	만원짜리 한장을 줍니다
7 17 20:57:41 <item4>	그럼 남는건 7600원이 됩니다
7 17 20:57:58 <item4>	이걸 아까 배운 %를 통해 표현해봅시다
7 17 20:58:09 <item4>	자, 생각나는대로 적어주세요
7 17 20:58:53 <grimb>	!c printf("%d",17600%10000);
7 17 20:58:56 <냐옹이>	7600
7 17 20:59:13 <item4>	grimb 님이 정답을 맞춰주셨네요
7 17 20:59:35 <item4>	17600을 10000으로 나눈 나머지는 7600이다
7 17 20:59:56 <item4>	자, 그럼 일단 만원짜리로 줘야하는것과
7 17 21:00:02 <item4>	만원짜리로 못주는거의 구분은 알았습니다
7 17 21:00:13 <item4>	그럼 만원짜리를 몇장 줘야하는지는
7 17 21:00:16 <item4>	어떻게 구해야할까요
7 17 21:00:53 <item4>	24500원이라고 생각해봅시다
7 17 21:01:00 <item4>	우리는 이미 눈으로 볼때 2장이라고 알고 있습니다
7 17 21:01:14 <grimb>	(17600-7600)/10000
7 17 21:01:35 <item4>	자, 일단 grimb님이 말씀하신것처럼 하면
7 17 21:01:39 <item4>	똑떨어지는 답이 나올겁니다
7 17 21:01:51 <item4>	근데 그렇게하면 식이 좀 길어집니다
7 17 21:01:57 <grimb>	네..^^;;
7 17 21:01:59 <item4>	17600이 input이니까
7 17 21:02:13 <ellif_w7>	!c print ("%d",24500%10000)
7 17 21:02:14 <냐옹이>	error: expected ‘;’ before ‘return’
7 17 21:02:17 <ellif_w7>	!c print ("%d",24500%10000);
7 17 21:02:18 <lyn>	그냥 나누기하면 답이 나올것같은데..
7 17 21:02:19 <냐옹이>	(아무것도 출력되지 않았습니다.)
7 17 21:02:20 <item4>	(input-input%10000)/10000
7 17 21:02:31 <item4>	input이 2번이나 나오고
7 17 21:02:36 <item4>	실제 나누기도 두번이나 해보고 있습니다
7 17 21:02:42 <item4>	효율성이 좋지 않네요
7 17 21:02:52 <item4>	lyn님 말씀대로 그냥 나누기만 해보겠습니다
7 17 21:03:02 <ellif_w7>	!c printf ("%d",24500%10000);
7 17 21:03:05 <냐옹이>	4500
7 17 21:03:10 <item4>	!c printf("%d",17600/10000);
7 17 21:03:14 <냐옹이>	1
7 17 21:03:15 <item4>	!c printf("%d",24500/10000);
7 17 21:03:18 <냐옹이>	2
7 17 21:03:25 <item4>	똑떨어지게 나옵니다
7 17 21:03:29 <item4>	이 이유가 이해 되시는분?
7 17 21:03:33 <lyn>	int니까요
7 17 21:03:35 <ellif_w7>	Int니까요
7 17 21:03:45 <ellif_w7>	Int니까 정수 이외는 산출할 수 없지요
7 17 21:04:04 <item4>	네. 그렇습니다
7 17 21:04:10 <item4>	지난시간에 말했지만
7 17 21:04:10 <dcdc>	음...
7 17 21:04:14 <item4>	정수 (연산) 정수
7 17 21:04:17 <item4>	는 정수만 나옵니다
7 17 21:04:28 <item4>	1/2 라고 한다고 해서
7 17 21:04:32 <item4>	0.5가 나오지 않습니다
7 17 21:04:39 <item4>	소숫점은 완전히 무시되죠
7 17 21:04:49 <item4>	17600/10000도 실제로 구해보면
7 17 21:04:55 <item4>	1.7600 이겠지만
7 17 21:04:59 <item4>	int/int 이므로
7 17 21:05:04 <item4>	1만 남습니다
7 17 21:05:29 <item4>	자, 그럼
7 17 21:05:32 <item4>	만원짜리는
7 17 21:05:38 <item4>	input/10000입니다
7 17 21:05:54 <item4>	거슬러주고 남은건 input%10000 입니다
7 17 21:06:13 <item4>	만원짜리 지폐 장수를 money10000 이란 변수에 저장한다고 하면
7 17 21:06:30 <item4>	money10000 = input/10000; 이 되겠죠
7 17 21:06:39 <item4>	여기까진 이해 되시나요
7 17 21:06:40 <grimb>	넵!
7 17 21:06:41 <lyn>	네
7 17 21:06:49 <item4>	자, 그럼 그 다음단계인
7 17 21:06:54 <item4>	5000원 짜리를 구해봅시다
7 17 21:06:54 <ellif_w7>	앞에 int 들어가야 하는거 아닌가요?
7 17 21:07:07 <item4>	int money10000; 은 위에 있다고 가정했습니다
7 17 21:07:19 <ellif_w7>	넵
7 17 21:07:34 <item4>	5000원 짜리도
7 17 21:07:40 <item4>	일단 생각나는건 나누기입니다
7 17 21:07:46 <item4>	한번 나눠보겠습니다
7 17 21:08:02 <item4>	!c printf("%d",17600/5000);
7 17 21:08:05 <냐옹이>	3
7 17 21:08:14 <item4>	이런, 5천원 짜리를 3장 줘야한다고 합니다
7 17 21:08:17 <item4>	이유가 뭘까요
7 17 21:08:26 <lyn>	(input-money10000*10000)/5000을 써야겠군요
7 17 21:08:45 <lyn>	이유는 나머지가 아닌 처음값으로 계산했으니까..
7 17 21:09:12 <item4>	네 맞습니다
7 17 21:09:19 <item4>	만원짜리로 이미 10000원을 줬는데
7 17 21:09:26 <item4>	그걸 생각 안하고 다시 보니까 생긴 문제입니다
7 17 21:09:43 <item4>	그럼, 만원어치는 빼야겠군요
7 17 21:10:03 <item4>	자, 그럼 이제 천천히 생각해봅시다
7 17 21:10:11 <item4>	5000원짜리 장수는 (input-money10000*10000)/5000
7 17 21:10:15 <item4>	이렇게 하면 나올겁니다
7 17 21:10:21 <item4>	그럼 1000원짜리는요?
7 17 21:10:30 <item4>	100원 50원 10원
7 17 21:10:37 <item4>	가면 갈수록 식이 길어집니다
7 17 21:11:15 <item4>	조금 다른 방향으로 접근해보겠습니다
7 17 21:11:23 <lyn>	계산한부분을 변수로 만들어서 뺀만큼을 추가해주면...
7 17 21:11:33 <item4>	(input-money10000*10000) 는
7 17 21:11:45 <grimb>	(input-money5000*1000)/1000
7 17 21:12:06 <item4>	음...
7 17 21:12:19 <item4>	1000원자리 장수 식을 보고싶으신것 같으니 적어드리자면
7 17 21:12:34 <item4>	(input-money10000*10000-money5000*5000)/1000
7 17 21:12:37 <item4>	이렇게 됩니다
7 17 21:12:49 <item4>	500원으로 가면 더 길어지겠죠
7 17 21:13:22 <item4>	만약 제가 1000만원짜리 수표도 고려하라고 했다간
7 17 21:13:27 <grimb>	네
7 17 21:13:28 <item4>	변수 길이에 치여 죽게 생겼습니다
7 17 21:13:45 <item4>	이 방법은 정확하지만 무언가 너무 노가다성이 심합니다
7 17 21:14:17 <item4>	그래서, 이번엔 접근을 달리 해보겠습니다
7 17 21:14:23 <item4>	(input-money10000*10000) 은
7 17 21:14:32 <item4>	input에서 만원짜리를 주고 남은 돈입니다
7 17 21:14:43 <item4>	만원짜리 준 장수는 / 로 구했는데
7 17 21:14:51 <item4>	나머지는 %로 구할 수 있습니다
7 17 21:15:00 <item4>	그럼, 이렇게 해보면 어떨까요
7 17 21:15:07 <item4>	input%10000
7 17 21:15:24 <lyn>	아하
7 17 21:15:42 <item4>	이러면 10000원짜리로 주고 남은 돈이 나옵니다
7 17 21:16:12 <item4>	그럼 money5000은 이렇게 구할 수 있겠죠
7 17 21:16:35 <item4>	money5000=(input%10000)/5000;
7 17 21:17:25 <item4>	1000원짜리까지만 같이 해보겠습니다
7 17 21:17:46 <item4>	money1000은 그럼 식이 어떻게 될까요?
7 17 21:18:40 <lyn>	money1000=(input%5000)/1000;
7 17 21:19:15 <item4>	input을 만원으로 주고 난 나머지에서 5000원을 주고 난 나머지니까
7 17 21:19:22 <item4>	input%10000%5000 아닐까요?
7 17 21:19:36 <lyn>	ㅇ
7 17 21:19:55 <item4>	자, 근데 정답은 lyn님의 답변입니다
7 17 21:20:01 <item4>	이건 수학적인 문제가 되겠는데요
7 17 21:20:14 <item4>	숫자를 좀 줄여서 생각해보죠
7 17 21:20:22 <item4>	12%10%5
7 17 21:20:25 <item4>	라고 생각해봅시다
7 17 21:20:43 <item4>	12를 10으로 나눈 나머지는 2입니다
7 17 21:20:50 <item4>	그걸 또 5로 나눈 나머지도 5입니다
7 17 21:21:11 <item4>	그럼
7 17 21:21:16 <item4>	12%5는 어떨까요
7 17 21:21:23 <lyn>	2요
7 17 21:21:25 <item4>	12는 5*2 + 2므로
7 17 21:21:27 <item4>	2가 나옵니다
7 17 21:21:33 <item4>	이 둘의 결과가 같은 이유는 
7 17 21:21:39 <item4>	10이 5의 배수이기 때문입니다
7 17 21:22:02 <item4>	배수 관계에선 나눠도 똑같이 됩니다
7 17 21:22:13 <item4>	자세한 수학적 증명은 제가 수학자가 아니므로 해드릴 수 없지만..
7 17 21:22:22 <item4>	input%10000%5000 이 아니라
7 17 21:22:25 <item4>	input%5000
7 17 21:22:27 <item4>	만 해도
7 17 21:22:33 <item4>	충분한 값을 구할 수 있습니다
7 17 21:23:10 <item4>	자, 그럼 이제 직접 풀어보겠습니다
7 17 21:23:28 <item4>	money10000 5000 1000 500 100 50 10 5 1
7 17 21:23:33 <item4>	변수를 만드시고
7 17 21:23:38 <item4>	input으로 입력을 받고
7 17 21:23:46 <item4>	출력은 좀 정신없을거같으니
7 17 21:23:50 <item4>	저장까지만 해봅시다
7 17 21:24:00 <item4>	9시 30분까지면 될까요
7 17 21:24:34 <item4>	한번 풀 수 있는데까지 풀어보겠습니다
7 17 21:30:43 <item4>	풀 수 있으신가요? 얼마나 푸셨나요? 시간 좀 더 드려야할까요
7 17 21:30:49 <lyn>	시간 좀 더 주세요
7 17 21:30:59 <item4>	네. 33분까지 풀어보겠습니다
7 17 21:33:40 <item4>	33분입니다. 이제 진행해도 될까요?
7 17 21:34:17 <item4>	다들 열심히 풀고계신건지.. 아니면 다 풀고 쉬고계신건지 답변을 주세요 ^^;;
7 17 21:34:48 <lyn>	풀고있어요
7 17 21:35:07 <item4>	36분에 일단 답 오픈합니다
7 17 21:35:47 <grimb>	머리 아파요..ㅎㅎ
7 17 21:36:42 <item4>	http://codepad.org/B3RQNp5K
7 17 21:36:48 <lyn>	다했습니다
7 17 21:36:50 <item4>	일단 이런식의 결과가 나오고 있다면 맞게 푸신겁니다
7 17 21:37:17 <item4>	두줄 오타있네요 다시 올리겠습니다
7 17 21:37:30 <lyn>	printf("만원 %d장, 오천원 %d장, 천원 %d장, 오백원 %d개, 백원 %d개, 50원 %d개, 10원 %d개, 5원 %d개, 1원 %d개",m10000,m5000,m1000,m500,m100,m50,m10,m5,m1);
7 17 21:37:34 <lyn>	빼곤 비슷하네요
7 17 21:37:36 <item4>	http://codepad.org/pJF5tPig
7 17 21:37:46 <item4>	자, 저는 일부로 출력을 뺐습니다
7 17 21:38:06 <item4>	일단 lyn님 출력결과를 상상해보겠습니다
7 17 21:38:16 <item4>	17650원이라고 치면
7 17 21:38:47 <item4>	만원 1장, 오천원 1장, 천원 2장, 오백원 1개, 백원 1개, 50원 1개, 10원 0개, 5원 0개, 1원 0개
7 17 21:38:55 <item4>	... 한줄로 보기엔 너무 깁니다
7 17 21:39:15 <item4>	그런데 우린 아직 여러줄로 출력하는법을 모릅니다
7 17 21:39:28 <item4>	혹시 printf를 2번 쓰면 두줄로 나오지 않을까요?
7 17 21:39:34 <item4>	한번 직접 해보겠습니다
7 17 21:39:50 <item4>	!c printf("첫째줄");printf("둘째줄");
7 17 21:39:53 <냐옹이>	첫째줄둘째줄
7 17 21:39:54 <dcdc>	쳐도 그냥 아무결과가 안나오는데요?
7 17 21:40:00 <item4>	dcdc, 네, 안나옵니다
7 17 21:40:05 <item4>	lyn님이 출력문을 만드셨길래
7 17 21:40:09 <item4>	예를 들어 보고있습니다
7 17 21:40:18 <item4>	위에 보다시피
7 17 21:40:21 <item4>	printf를 두번한다고 해서
7 17 21:40:25 <item4>	두줄이 나오진 않습니다
7 17 21:40:33 <item4>	그럼, 2줄을 표현하고 싶으면 어떻게 해야할까요?
7 17 21:40:49 <lyn>	<br /> 은 아닐테고ㅎㅎ
7 17 21:41:02 <item4>	간단합니다. 컴퓨터보고 엔터를 치라고 시키면 됩니다
7 17 21:41:21 <item4>	!c printf("첫째줄\n");printf("둘째줄");
7 17 21:41:24 <냐옹이>	첫째줄
7 17 21:41:24 <냐옹이>	둘째줄
7 17 21:41:29 <item4>	!c printf("첫째줄\n둘째줄");
7 17 21:41:31 <냐옹이>	첫째줄
7 17 21:41:32 <냐옹이>	둘째줄
7 17 21:41:36 <item4>	감이 오시나요
7 17 21:41:46 <item4>	\n이란 글자를 기준으로
7 17 21:41:49 <item4>	한줄 끊어지고 있습니다
7 17 21:42:13 <item4>	이걸 이용하면 출력을 좀 간결하게 해볼 수 있지 않을까요?
7 17 21:42:25 <item4>	만원 : 1장
7 17 21:42:25 <ellif_w7>	그리고
7 17 21:42:30 <item4>	오천원 : 1장
7 17 21:42:31 <item4>	이런식으로
7 17 21:42:40 <item4>	한줄씩 띄워져서 나오게 출력문을 구성해봅시다
7 17 21:42:47 <item4>	printf 함수는 여러개 사용해도 됩니다
7 17 21:43:02 <item4>	여러개 쓰는편이 좀 더 줄 수는 길겠지만 읽기는 편할겁니다
7 17 21:43:19 <item4>	47분까지 해보겠습니다
7 17 21:47:10 <lyn>	잘 나옵니다
7 17 21:47:59 <ellif_w7>	으음 좀 힘드네요
7 17 21:48:13 <item4>	http://codepad.org/QiDdHUDi
7 17 21:48:20 <item4>	이런식의 소스가 나오셨다면 정답입니다
7 17 21:49:10 <item4>	어떻게, 정답에는 다들 근접하셨나요
7 17 21:49:34 <lyn>	아하
7 17 21:49:39 <dcdc>	우와... 짱인데요?
7 17 21:49:48 <lyn>	전 한줄로 했는데
7 17 21:49:49 <lyn>	printf("1만원 : %d장\n5천원 : %d장\n1천원 : %d장\n5백원 %d개\n1백원 %d개\n5십원 %d개\n1십원 %d개\n5원 %d개\n1원 %d개",m10000,m5000,m1000,m500,m100,m50,m10,m5,m1);
7 17 21:49:54 <dcdc>	저는 사실 감 자체가 없어서 손놓고 있었지만... 신기하네요. :)
7 17 21:49:56 <item4>	1줄로 해도 됩니다
7 17 21:50:02 <lyn>	아..음
7 17 21:50:07 <lyn>	어느게 더 좋을까요? 비슷비슷?
7 17 21:50:07 <ellif_w7>		printf("입력하신 금액은 5만원짜리 %d장, \n1만원짜리 %d장, \n5천원짜리 %d장, \n천원짜리 %d장, \n오백원짜리 %d개, \n백원짜리 %d개, \n오십원짜리 %d개,\n십원짜리 %d개\n로 변환할 수 있습니다.",m50000,m10000,m5000,m1000,m500,m100,m50,m10);
7 17 21:50:14 <ellif_w7>	이렇게 해도 큰 문제는 없죠?
7 17 21:50:20 <item4>	다만 제가 1000만원권 수표부터 1원까지.. 라고 했다면
7 17 21:50:25 <item4>	더 길어졌겠고
7 17 21:50:29 <item4>	읽기가 좀 불편하겠죠
7 17 21:50:38 <item4>	printf를 한번 쓴다는 측면에서는 한줄이 좋지만
7 17 21:50:48 <item4>	읽고 이해하는게 목적이므로 저는 여러줄로 썼습니다
7 17 21:50:49 <lyn>	그렇죠. 지금도 툭하면 한글이 깨져보이는데..
7 17 21:50:56 <item4>	한줄로 쓰셨다고 오답은 아닙니다
7 17 21:51:18 <item4>	자, 문제를 푸신분은 자기 소스로, 못푸신분은 제 소스를 가지고
7 17 21:51:22 <item4>	컴파일 후 실행해주세요
7 17 21:51:35 <ellif_w7>	으음 이상하네요
7 17 21:51:40 <item4>	그리고 98765원은 어떻게 나눠지는지 보겠습니다
7 17 21:52:38 <lyn>	9 1 3 1 2 1 1 1 0이요
7 17 21:53:01 <item4>	다른분들도 저렇게 나오셨나요
7 17 21:53:46 <grimb>	네
7 17 21:53:54 <ellif_w7>	맞네요
7 17 21:54:24 <item4>	오늘의 포인트는 3가지입니다
7 17 21:54:29 <item4>	scanf로 입력을 받을 수 있다
7 17 21:54:49 <item4>	%로 나누기한 나머지를 구할 수 있다
7 17 21:54:55 <item4>	\n으로 줄을 띄울 수 있다
7 17 21:55:31 <item4>	오늘 수업은 여기까지 하고요
7 17 21:55:35 <item4>	숙제가 있습니다
7 17 21:55:51 <item4>	하루는 24시간
7 17 21:55:54 <item4>	1시간은 60분
7 17 21:56:01 <item4>	1분은 60초입니다
7 17 21:56:11 <item4>	제가 123456초라고 입력하면
7 17 21:56:28 <item4>	a일 b시간 c분 d초
7 17 21:56:36 <item4>	라고 출력되는 프로그램을 만들어오세요
7 17 21:56:42 <lyn>	ㅎㅎㅎ 네
7 17 21:56:52 <ellif_w7>	으음 제 코드로는 실행이 제대로 안되네요
7 17 21:56:55 <ellif_w7>	뭐가 문제지
7 17 21:57:06 <item4>	그리고 설문조사가 있습니다
7 17 21:57:25 <item4>	오늘 스터디가 2시간 30분에 걸쳐서 진행되었는데요
7 17 21:57:28 <item4>	너무 긴가요?
7 17 21:57:33 <lyn>	더 해도 됩니다
7 17 21:57:50 <item4>	다른 분들 의견도 들려주세요
7 17 21:58:18 <grimb>	적당합니다!!
7 17 21:58:20 <dcdc>	수업이 좀 길긴 하지만... 이런 방법으로 진행하니 괜찮긴 하네요.
7 17 21:58:54 <dcdc>	근데... 모를 경우에는 좀 지루해지는것 같습니다. 오늘은 더 몰라서... 그냥 손놓고 결과 코드가 나오기만을 기다렸네요.
7 17 21:59:54 <item4>	ellif_w7, Jstring, mathieu, wk 스터디 시간 길이에 대한 의견 없으신가요
7 17 22:00:08 <ellif_w7>	item4, 큰 문제는 없어요
7 17 22:01:28 <item4>	다른분들 의견도 듣고싶은데 지금 부재중이신거같네요
7 17 22:01:53 <item4>	제가 이번에 스터디에 대한 설문조사를 해보니
7 17 22:02:12 <item4>	수업이 느리다.. 라고 하는분들이 꽤 계셨어요
7 17 22:02:23 <item4>	하지만 저는 지금 정도 속도가 적정선이라고 봅니다
7 17 22:02:48 <item4>	프로그래밍을 조금 하셨던분들은 빨리빨리 진도를 나가기를 원하시겠지만
7 17 22:02:55 <item4>	저는 앞으로 계속 
7 17 22:03:03 <item4>	문제풀이를 많이 해보는식으로
7 17 22:03:10 <item4>	소스 짜는데에 익숙해질 시간을 가질거에요
7 17 22:03:49 <item4>	수업 속도에 대해서는 지금 당장 더 빨리 할 수는 없다는 방침을 일단 알려드리구요
7 17 22:04:03 <item4>	수업 난이도에 대해서는
7 17 22:04:12 <item4>	일단 이거보다 더 쉬워지면 공부가 안됩니다
7 17 22:04:21 <item4>	C라는것 자체의 난이도선이 이정도가 적정하다고 보는데
7 17 22:04:28 <item4>	문제는 이해하기 힘든 부분이 분명히 생겨요
7 17 22:04:34 <item4>	가령 오늘 나왔던 변수 주소라던가
7 17 22:04:45 <item4>	이런 부분에 대해서는 제가 대안을 2개 제시합니다
7 17 22:04:48 <item4>	먼저 복습입니다
7 17 22:04:57 <item4>	복습을 하다보면 조금 더 보이는 부분이 있을거에요
7 17 22:05:14 <item4>	그렇게 해서 깨달으시면 그것만으로도 큰 수확이구요
7 17 22:05:19 <item4>	만약 그래도 안된다! 그러시면
7 17 22:05:22 <item4>	언제라도 이 채널로 오세요
7 17 22:05:32 <item4>	밤, 새벽만 아니면 저는 거의 언제나 이 채널에 있습니다
7 17 22:06:07 <item4>	궁금한게 생기면 채널로 와주세요
7 17 22:06:16 <wk>	넵
7 17 22:06:25 <item4>	그리고 웹페이지반에서는 이미 공고가 나갔는데
7 17 22:06:40 <item4>	다음 스터디부터는 한명도 없더라도 30분에 바로 시작합니다
7 17 22:07:06 <item4>	대신 30분에 바로 시작하는 대신
7 17 22:07:17 <item4>	중간에 10분에서 15분정도 휴식시간을 갖도록 하겠습니다
7 17 22:07:22 <item4>	괜찮나요?
7 17 22:07:37 <ellif_w7>	뭐 반대하시는 분이 계셔야
7 17 22:07:38 <lyn>	없어도 괜찮습니다
7 17 22:07:53 <ellif_w7>	앗뎀씨가 쉬셔야 하는 부분도 있으니 저는 찬성입니다.
7 17 22:07:56 <lyn>	필요하시면 괜찮습니다
7 17 22:08:09 <item4>	장시간 공부에 익숙하신분도 계신가 하면
7 17 22:08:11 <wk>	저도 상관없습니다.
7 17 22:08:18 <item4>	잠깐식 환기가 필요하신분도 계실테니
7 17 22:08:24 <wk>	온라인이라 잠깐씩 담배필 짬은 나네요 ㅋ
7 17 22:08:25 <item4>	휴식시간은 갖도록 하겠습니다
7 17 22:08:37 <grimb>	네
7 17 22:08:40 <item4>	오늘 스터디 내용에 대해 질문 없나요
7 17 22:09:03 <ellif_w7>	질문. int 상수를 소문자 한 글자로 해서는 안되나요.
7 17 22:09:12 <item4>	int i
7 17 22:09:20 <ellif_w7>	아무래도 int m; 식으로 해서 안되는것 같은 느낌인데...()
7 17 22:09:22 <item4>	이런식으로 하면 안되냐는거죠?
7 17 22:09:25 <ellif_w7>	네
7 17 22:09:26 <item4>	상관 없습니다. 됩니다
7 17 22:09:30 <ellif_w7>	그럼 이상하네
7 17 22:09:34 <item4>	단, int 1; 이런건 안됩니다
7 17 22:09:46 <item4>	변수명은 _나 영어로 시작해야합니다
7 17 22:10:17 <lyn>	%의 우선순위는 +-나 */랑 비교해서 윈가요 아랜가요?
7 17 22:10:36 <item4>	저도 외우고 있는 사항은 아닌데, 직접 실험을 해보겠습니다
7 17 22:10:48 <item4>	!c printf("%d",10%3*2);
7 17 22:10:51 <냐옹이>	2
7 17 22:11:05 <lyn>	%가 최상이군요
7 17 22:11:09 <item4>	아무래도 같은 순위인것 같군요
7 17 22:11:13 <item4>	!c printf("%d",10*3%2);
7 17 22:11:13 <lyn>	아 순서
7 17 22:11:17 <냐옹이>	0
7 17 22:11:26 <item4>	네. 같은 순위상에 있습니다
7 17 22:11:36 <lyn>	아하
7 17 22:11:40 <item4>	같은 순위상이면 왼쪽에서 오른쪽으로 실행됩니다
7 17 22:11:51 <lyn>	그럼 또.... 아까 메시지 보냈는데 갔었죠?
7 17 22:11:57 <item4>	네
7 17 22:12:00 <lyn>	그리고 이어서 더 보냈는데 그건 안갔죠?
7 17 22:12:07 <item4>	%를 /보다 힘들어하느냐 보내주신건 받았습니다
7 17 22:12:11 <item4>	그 이후는 못받았네요
7 17 22:12:30 <item4>	제가 /를 컴퓨터가 힘들어한다고 한것은
7 17 22:12:36 <item4>	컴퓨터는 나누기를 할 줄 모르기때문입니다
7 17 22:12:42 <item4>	그래서 단순 무식하게
7 17 22:12:51 <item4>	숫자를 조금씩 낮춰가며 빼봅니다
7 17 22:13:02 <item4>	답이 나올때까지요
7 17 22:13:08 <lyn>	허허;
7 17 22:13:21 <item4>	그에 비하면 %는 간단합니다
7 17 22:13:29 <item4>	숫자를 낮춰볼 필요 없이 쭉 빼면 되니까요
7 17 22:13:44 <item4>	따라서 %는 /보다는 가볍습니다
7 17 22:14:00 <lyn>	다 빼고 더이상 못빼는 게 %로 나오는거 아닌가요?
7 17 22:14:13 <item4>	10%3이라고 친다면
7 17 22:14:16 <item4>	10에서 3을 빼고
7 17 22:14:21 <item4>	그럼 7이남고
7 17 22:14:25 <item4>	7에서 3빼서 4남고
7 17 22:14:31 <item4>	4에서 3빼서 1남았는데
7 17 22:14:35 <item4>	1은 3보다 작으니 멈춥니다
7 17 22:14:38 <item4>	이런식으로 처리됩니다
7 17 22:14:49 <lyn>	거기서 1이 %로 나오는게 아닌가요?
7 17 22:14:56 <item4>	네. 1이 결과물입니다
7 17 22:15:16 <lyn>	그럼 나누기는 뺀 횟수, %는 빼고남은 결과물...인데
7 17 22:15:16 <item4>	나눗셈의 무한정 빼보기보다는
7 17 22:15:25 <item4>	훨씬 가볍죠
7 17 22:15:51 <lyn>	이해가 안가요; 다 빼봐야 나머지를 알 수 있을 것 같은데;
7 17 22:16:03 <item4>	네. 계속 뺍니다
7 17 22:16:06 <item4>	곱하기의 경우도 그냥
7 17 22:16:09 <item4>	계속 더합니다
7 17 22:16:33 <item4>	컴퓨터는 더하기랑 빼기 (원칙적으로는 빼기도 할 줄 모르지만..)만 가능합니다
7 17 22:16:37 <lyn>	뺀 횟수를 카운트하지 않아도 되니까 더 간단한 거라고도 볼 수 있는거군요
7 17 22:16:40 <lyn>	헐
7 17 22:16:51 <item4>	빼기가 안된다는 부분은
7 17 22:16:53 <item4>	뒤~ 에가서
7 17 22:16:59 <item4>	자료구조에 들어가면 다룰겁니다
7 17 22:17:29 <item4>	더 상세한 부분은 힘들어지므로 여기까지만 하겠습니다
7 17 22:17:33 <item4>	다른 질문 있으신가요
7 17 22:17:55 <lyn>	아
7 17 22:18:00 <lyn>	아까 보낸 메시지
7 17 22:18:03 <lyn>	앞의 거가 안갔나보네요;
7 17 22:18:09 <lyn>	보내지면 표기가 안되는거구나;
7 17 22:18:18 <lyn>	그 전에 보낸건
7 17 22:18:31 <lyn>	변수 이름이 길면 용량도 많이 차지하고 처리하는 시간도 짧은거에 비해서 많이 걸리게될까요?
7 17 22:18:40 <item4>	아, 그것도 좋은 질문이네요
7 17 22:19:07 <item4>	홍길동이라는 사람과 가나다라마바사아자차카타파하 라는 사람이 있을때
7 17 22:19:12 <item4>	달리기 속도는 누가 빠를까요
7 17 22:19:32 <item4>	... 당연히 빠른 사람이 빠르겠죠
7 17 22:19:42 <item4>	이름은 영향을 주지 않습니다
7 17 22:19:45 <lyn>	오호....
7 17 22:19:49 <item4>	변수에 저장된 자료가 저장되는 공간과
7 17 22:19:49 <lyn>	이름은 그냥 이름일 뿐이군요
7 17 22:19:56 <item4>	변수명이 저장되는 공간은 다릅니다
7 17 22:20:04 <item4>	변수명이 길면 보기 힘들고
7 17 22:20:11 <item4>	변수명 길이도 분명히 한계가 있습니다
7 17 22:20:27 <item4>	하지만 속도에 영향은 안주니까
7 17 22:20:34 <item4>	너무 짧게 지으려고 하지 않아도 됩니다
7 17 22:20:42 <item4>	변수명 작명의 핵심은
7 17 22:20:48 <item4>	이 변수가 무엇을 하는건지 알 수 있으면서도
7 17 22:20:55 <item4>	너무 길지 않게 하는것입니다
7 17 22:21:35 <item4>	다른 질문 더 있으신가요
7 17 22:21:38 *	[Jstring] (FIRC@*.*.*.*): FIRC
7 17 22:21:38 *	[Jstring] +#item4-study 
7 17 22:21:38 *	[Jstring] ocarina.irc.ozinger.org :Ozinger IRC network on ocarina.ruree.net
7 17 22:21:38 *	[Jstring] idle 01:34:33, signon: Wed Jul 17 19:32:47
7 17 22:21:38 *	[Jstring] End of WHOIS list.
7 17 22:21:45 *	[mathieu] (mathieu@*.*.*.*): realname
7 17 22:21:45 *	[mathieu] +#item4-study 
7 17 22:21:45 *	[mathieu] kanade.irc.ozinger.org :Ozinger IRC network on kanade.devunt.kr
7 17 22:21:45 *	[mathieu] End of WHOIS list.
7 17 22:22:01 <lyn>	음
7 17 22:22:02 <lyn>	감사합니다
7 17 22:22:03 <lyn>	아
7 17 22:22:06 <lyn>	int 할때
7 17 22:22:12 <lyn>	한꺼번에 와르르 할 순 없나요
7 17 22:22:16 <item4>	할 수 있습니다
7 17 22:22:22 <item4>	int a;
7 17 22:22:23 <item4>	int b;
7 17 22:22:25 <item4>	int c;
7 17 22:22:27 <item4>	이렇게 있다면
7 17 22:22:30 <item4>	int a,b,c;
7 17 22:22:33 <item4>	이렇게 해도 됩니다
7 17 22:22:36 <lyn>	!!
7 17 22:23:02 <ellif_w7>	으앙!
7 17 22:23:19 <ellif_w7>	다만 기본 값을 정할 때만 따로 하면 되겠...
7 17 22:23:29 <item4>	기본값 정하는것도 섞을 수 있긴 한데
7 17 22:23:34 <ellif_w7>	설마 int a=30,b=7000,d=50;
7 17 22:23:35 <item4>	볼때 정신없으니
7 17 22:23:37 <ellif_w7>	이런건
7 17 22:23:40 <ellif_w7>	아 되는군요
7 17 22:23:49 <lyn>	음
7 17 22:23:51 <item4>	미관상 나눠서 쓰는걸... 저는 좋아합니다
7 17 22:23:53 <lyn>	그럼 아까 한건 노가다였군요;
7 17 22:23:58 <item4>	이건 개인적 취향의 문제니까
7 17 22:24:01 <lyn>	오래걸리지 않나요?;
7 17 22:24:14 <item4>	아까같은 경우는 복사해서 붙여넣으면 됬으니까요
7 17 22:24:22 <lyn>	호 명령어를 나눠쓰든 한번에 쓰든 속도차이는 없나보네요..
7 17 22:24:27 <lyn>	아하..
7 17 22:24:50 <item4>	이번 과제하실때는 한번 , 로 쭉 늘여뜨려서 써보시는것도 나쁘지 않겠네요
7 17 22:24:52 <ellif_w7>	으음
7 17 22:25:14 <ellif_w7>	으음 왜 제것만 이상한거지 으음
7 17 22:25:26 <item4>	ellif_w7, 끝내고 따로 봐드릴게요
7 17 22:25:31 <ellif_w7>	넵
7 17 22:25:40 <item4>	다른 질문 없으면 오늘 스터디는 여기까지 하겠습니다
7 17 22:25:50 <lyn>	과제 끝!
7 17 22:25:52 <item4>	모두 수고하셨습니다
7 17 22:25:52 <lyn>	감사합니다!