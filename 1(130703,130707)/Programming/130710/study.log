7 10 19:30:52 <item4>	----- 여기부터 공개됩니다 ------------------------
7 10 19:31:09 <item4>	안녕하세요. 오늘도 스터디를 진행하려고 하는데...
7 10 19:31:20 <item4>	30분까지 도착인데 30분부터 도착으로 알고 계신가보네요
7 10 19:31:27 <item4>	접속자가.. 좀 더 모이면 시작해야할 것 같군요
7 10 19:31:37 *	UKNOW (dfc29979@web/*.*.*.*) has joined
7 10 19:31:38 *	ㅇㅈㅇ gives voice to UKNOW
7 10 19:31:58 <dcdc>	^^
7 10 19:32:15 <dcdc>	30분전에 와서 30분에 밥먹으러 가는 사람도 있네요... ㅡㅡ;;
7 10 19:32:42 <essential923>	ㅋㅋㅋ저도좀 놀랫음
7 10 19:33:34 *	최호준 (FIRC@*.*.*.*) has joined
7 10 19:33:34 *	ㅇㅈㅇ gives voice to 최호준
7 10 19:33:35 <드류드류>	헉..!
7 10 19:33:53 <드류드류>	전 스터디 취소된 건가 싶어서 공지 다시 살피고 있었어요...ㅎㅎ
7 10 19:34:05 <최호준>	응?? 아이템님 있으신데요 ㅋ
7 10 19:34:20 <드류드류>	접속자가.. 좀 더 모이면 시작해야할 것 같군요 << 라고 하셨어요.
7 10 19:34:23 *	sz (FIRC@*.*.*.*) has joined
7 10 19:34:23 *	ㅇㅈㅇ gives voice to sz
7 10 19:34:30 *	talkk (talkk@*.*.*.*) has joined
7 10 19:34:30 *	ㅇㅈㅇ gives voice to talkk
7 10 19:34:55 <talkk>	수업 진행안하나요~?
7 10 19:35:11 <essential923>	조금더 기다립시당
7 10 19:35:13 <item4>	아직 좀 덜오신것 같아서
7 10 19:35:22 <item4>	조금만 더 기다렸다 시작하겠습니다
7 10 19:36:04 <talkk>	네 저번시간 빠졌는데 혹시 그동안 준비해놓을거라도....말씀해주시면 감사하겠습니다 (__)
7 10 19:36:09 <dojun>	못들어오시는분들도 많나보네요 일이나 그런것때문에
7 10 19:36:30 <드류드류>	야근 하면서 눈치껏 참여하는 1인...ㅠㅠ
7 10 19:36:46 <item4>	talkk, 사용하시는 프로그램이 어떻게 되시나요. 컴파일러요
7 10 19:37:05 <talkk>	지금 dev 5.4.2
7 10 19:37:09 <talkk>	까는중입니다
7 10 19:37:11 <essential923>	저두 저번시간 못들어왔는데..
7 10 19:37:12 <드류드류>	다시 공지 주신 대로 ++dev 5.4.2 설치하였습니다.
7 10 19:37:12 <item4>	네
7 10 19:38:01 <talkk>	오늘 시작해도 따라갈수있나요.... ㄷㄷ?
7 10 19:38:12 <item4>	지난번 스터디 내용 읽어보셨다면
7 10 19:38:16 <item4>	충분히 따라갈 수 있습니다
7 10 19:38:35 *	talkk has quit (Connection closed)
7 10 19:38:46 <드류드류>	헉...나갔...
7 10 19:38:48 *	talkk (talkk@*.*.*.*) has joined
7 10 19:38:48 *	ㅇㅈㅇ gives voice to talkk
7 10 19:38:51 <essential923>	지난번 스터디 내용이 어딧는지 여쭤봐도 될까요?; 어딧는지 모르겟네요 찾아보긴햇는데
7 10 19:39:00 <dojun>	gcc 파일이름으로 컴파일하는게 -o 였나...
7 10 19:39:11 <item4>	생활코딩 스터디 그룹에
7 10 19:39:17 <item4>	온라인 스터디로 검색하면 나옵니다
7 10 19:39:26 <dcdc>	https://github.com/item4/StudyGroup/tree/master/1%28130703%2C130707%29/Programming/130703
7 10 19:39:30 <드류드류>	https://github.com/item4/StudyGroup/tree/master/1%28130703%2C130707%29/Programming/130703
7 10 19:39:42 <dcdc>	@essential923 여기가시면 있어요.
7 10 19:39:52 <essential923>	감사합니다^^
7 10 19:39:59 <item4>	40분이네요
7 10 19:40:03 <item4>	이제 시작해야할 것 같군요
7 10 19:40:24 <item4>	안녕하세요. 오늘도 이어서 스터디를 시작하려고 합니다
7 10 19:40:42 <item4>	지난시간보다 인원이 줄어들은것 같지만 일단 시작하도록 하겠습니다
7 10 19:41:11 <item4>	지난시간에는 Hello world를 해봤습니다
7 10 19:41:28 <item4>	과제로 다른 자기가 하고싶은 말 출력으로 바꿔보라고 했는데
7 10 19:41:32 <item4>	해보신분 계신가요
7 10 19:41:47 <드류드류>	hello world 를 Thank you 로....
7 10 19:41:48 <dcdc>	네
7 10 19:41:51 <dojun>	넵
7 10 19:41:51 <UKNOW>	예
7 10 19:42:01 <dcdc>	저는 '헬로우 월드!'로...
7 10 19:42:06 <item4>	하면서 막히는 부분은 없었는지요
7 10 19:42:13 <드류드류>	넵
7 10 19:42:16 <dojun>	아직까지는 없었어요~
7 10 19:42:17 <ellif_w7>	줄넘김이 안됐죠
7 10 19:42:37 <item4>	줄넘김이 안됬다.. 하나
7 10 19:42:41 <item4>	다른 문제는 없으셨나요
7 10 19:42:55 <dcdc>	한글이 깨졌었어요. 해결했습니다~ :) 
7 10 19:43:37 <item4>	사소한거지만 직접 해보는것이 남는겁니다. 오늘부터는 해볼거리가 많아지니 열심히 도전해주세요
7 10 19:43:44 <드류드류>	넵
7 10 19:43:55 <item4>	오늘은 잠시 엉뚱한 이야기에서부터 시작하겠습니다
7 10 19:44:15 <item4>	우리는 일상생활속에서 모든 정보를 글씨나 소리, 그림같은 형태로 받습니다
7 10 19:44:35 <item4>	컴퓨터 화면에도 대부분의 정보는 글씨로 나오는 편인데요
7 10 19:44:57 <item4>	우리는 아무렇지 않게 글씨로 모든 정보를 읽고 쓰지만
7 10 19:45:04 <item4>	사실 이 정보들에는 종류가 있습니다
7 10 19:45:28 <item4>	예를들면, 일기장을 생각해보죠
7 10 19:45:34 <item4>	~~~~ 월 ~~~~ 일
7 10 19:45:44 <item4>	여기다가는 7월 10일
7 10 19:45:49 <item4>	이렇게 날짜를 적지
7 10 19:45:57 <item4>	가나다월 아야어여일
7 10 19:46:03 <item4>	이렇게 글씨를 적지는 않습니다
7 10 19:46:18 <item4>	반대로, 날씨를 적는 칸에
7 10 19:46:23 <item4>	맑음, 흐림 이렇게는 쓸지라도
7 10 19:46:24 <item4>	1234
7 10 19:46:28 <item4>	이렇게 쓰진 않습니다
7 10 19:46:48 <item4>	우린 일상생활속에서도 이미
7 10 19:46:55 <item4>	정보의 종류를 나눠가며 쓰고있습니다
7 10 19:47:00 <item4>	그럼 프로그래밍에선 어떨까요?
7 10 19:47:30 <item4>	일단 오늘 시작할 소스는 이것입니다
7 10 19:47:31 <item4>	http://codepad.org/pgAZVanj
7 10 19:47:42 <item4>	한번 타이핑해봐주세요. 컴파일 후 실행은 하지 않으셔도 됩니다
7 10 19:47:54 <dojun>	넵넵
7 10 19:48:27 <lyn>	했습니다
7 10 19:48:52 <dojun>	저두요!
7 10 19:48:57 <sz>	했습니다
7 10 19:49:13 *	kai (0e28538d@web/*.*.*.*) has joined
7 10 19:49:14 *	ㅇㅈㅇ gives voice to kai
7 10 19:49:18 <dcdc>	했습니다.
7 10 19:49:28 <item4>	자, 이 소스를 통해 우리는
7 10 19:49:38 <item4>	컴퓨터가 대략적으로 어떻게 정보를 표현하는지 알아보려고 합니다
7 10 19:49:46 <item4>	아주 대표적인 3가지를 꼽아보았습니다
7 10 19:50:00 <item4>	지난 시간엔 못보았던 종류가 3개 있습니다
7 10 19:50:05 <item4>	int a;
7 10 19:50:09 <item4>	float b;
7 10 19:50:14 <item4>	char c;
7 10 19:50:37 <item4>	뭔가 규칙성이 있는것 같으면서도 아직은 감이 안옵니다
7 10 19:51:00 <드류드류>	넵..!
7 10 19:51:01 <item4>	int a; 를 가지고 설명을 해보도록 하겠습니다
7 10 19:51:18 <item4>	일단 이 줄은
7 10 19:51:28 <item4>	a라는 '변수'를 만드는데, 그 변수는 int형이다
7 10 19:51:34 <item4>	라는 뜻을 갖습니다
7 10 19:51:47 <item4>	모르는게 두개나 더 생겨버렸습니다
7 10 19:51:53 <item4>	변수는 무엇이고,int형은 무엇일까요
7 10 19:52:06 <item4>	일단 변수부터 알아봐야할텐데요
7 10 19:52:13 <item4>	변수는 말 그대로
7 10 19:52:16 <item4>	변하는 수 입니다
7 10 19:52:25 <item4>	꼭 숫자에 한정지어지진 않구요
7 10 19:52:37 <item4>	변하는것을 변수라고 합니다
7 10 19:52:49 <item4>	예를들면 매일, 매순간 변하는 온도나 풍향, 풍속
7 10 19:52:57 <item4>	이런것들은 매번 변하니까 변수라고 할 수 있겠죠
7 10 19:53:10 <item4>	하지만 이와 반대로 변하지 않는 것들도 있습니다
7 10 19:53:31 <item4>	예를들면 (향후 몇억년간은) 해는 동쪽에서 뜬다는 사실이라던가
7 10 19:53:44 <item4>	물은 상온에서 액체라던가 하는
7 10 19:53:49 <item4>	변하지 않는 사실들도 있습니다
7 10 19:54:10 <item4>	변수처럼 변하지 않는 무언가도 있다는 것인데요
7 10 19:54:14 <item4>	예를들면 숫자 1은
7 10 19:54:19 <item4>	무슨 일이 생겨도 숫자 1입니다
7 10 19:54:26 <item4>	이것의 가치는 변하지 않죠
7 10 19:54:35 <item4>	이런건 상수라고 합니다
7 10 19:54:46 <item4>	간단히 정리하자면
7 10 19:54:49 <item4>	변하는것 : 변수
7 10 19:54:53 <item4>	안변하는것 : 상수
7 10 19:54:57 <item4>	이정도가 되겠네요
7 10 19:55:18 <item4>	그럼, 변수를 하나 만든다고 한것은
7 10 19:55:25 <item4>	뭔진 몰라도 앞으로 변할것으로 보이는걸
7 10 19:55:40 <item4>	어떻게 하려고 만든다는것이 되겠죠
7 10 19:56:08 <item4>	그다음에, int형이라고 했는데요
7 10 19:56:14 *	vLEE (735f5a2b@web/*.*.*.*) has joined
7 10 19:56:14 *	ㅇㅈㅇ gives voice to vLEE
7 10 19:56:15 <item4>	이건 지난시간에도 슬쩍 말하긴 했습니다
7 10 19:56:32 <item4>	int란, integer의 준말입니다
7 10 19:56:38 <item4>	정수라는 뜻의 영단어입니다
7 10 19:56:47 <item4>	그럼 우리는
7 10 19:56:50 <item4>	int a;
7 10 19:56:53 <item4>	라는것이
7 10 19:56:56 <item4>	뭔진 몰라도
7 10 19:57:09 <item4>	변수라는걸 만드는데 그 변수는 정수를 담는구나...! 까진 알 수 있습니다
7 10 19:57:42 <item4>	프로그래밍에서 변수란 저장공간을 말합니다
7 10 19:58:01 <item4>	우리가 종이로 된 이력서에 정보를 쓰는 칸이 있듯
7 10 19:58:12 <item4>	컴퓨터 프로그램도 정보를 기입할 칸이 필요한데요
7 10 19:58:19 <item4>	이 칸을 변수라고 보면 됩니다
7 10 19:58:33 <item4>	이해를 쉽게 하려면 변수를 그릇에 빗대어볼 수 있겠습니다
7 10 19:58:41 <item4>	세상에 그릇은 많은데
7 10 19:58:47 <item4>	그 중엔 물을 담는 컵도 있고
7 10 19:58:55 <item4>	밥을 담는 밥공기도 있는가 하면
7 10 19:59:14 <item4>	요리할때 쓰는 냄비도 있습니다
7 10 19:59:23 <item4>	같은 담는 공간인데
7 10 19:59:29 <item4>	담는것이나 용도가 다릅니다
7 10 19:59:39 <item4>	변수도 마찬가지입니다
7 10 20:00:03 <item4>	자료를 담는데, 그 자료의 종류를 미리 정해놓고 담는겁니다
7 10 20:00:18 <item4>	왜 그렇게 하냐고 물어볼 수도 있는데
7 10 20:00:23 <item4>	간단히 예를 들면
7 10 20:00:34 <item4>	개밥그릇에 밥을 먹을 순 없는 노릇이니까.. 정도로 설명이 가능합니다
7 10 20:01:03 <item4>	그럼, int형 변수를 만든다는것은
7 10 20:01:09 <item4>	정수를 담을 그릇을 만든다는것인데
7 10 20:01:16 <item4>	다시 원래 흐름으로 돌아와서
7 10 20:01:20 <item4>	int a; 라고 한것은
7 10 20:01:31 <item4>	int형 자료를 담는 그릇을 만들어서
7 10 20:01:45 <item4>	그것을 a라고 부르는것입니다
7 10 20:02:07 <item4>	그럼 앞으로 a에는 정수 자료를 저장할 수 있습니다.
7 10 20:02:13 <item4>	여기까지 이해 되셨나요?
7 10 20:02:21 <lyn>	네
7 10 20:02:32 <sz>	네 ㅎㅎ
7 10 20:02:34 <dcdc>	조금이해요.
7 10 20:03:12 <lyn>	아
7 10 20:03:16 <lyn>	음
7 10 20:03:22 <item4>	이해가 안되는 부분이나 궁금한 부분 있으면
7 10 20:03:22 <dojun>	네네네!
7 10 20:03:23 <item4>	말씀해주세요
7 10 20:03:31 <lyn>	그럼 int main에서 main은 정수가 아닌데 어떻게 int를 쓸 수 있는 건가요?
7 10 20:03:49 <talkk>	질문 좋다....
7 10 20:03:53 <item4>	음. 어려운 질문이 나왔는데요
7 10 20:04:00 <item4>	이건 함수에 가서 배우겠지만
7 10 20:04:00 <sz>	진짜 한번도 생각 안해본건데 ㄷㄷㄷ
7 10 20:04:07 <item4>	int main은 int가 됩니다
7 10 20:04:11 <item4>	9번째 줄을 보면
7 10 20:04:16 <item4>	return 0가 있습니다
7 10 20:04:19 <item4>	0은 정수지요
7 10 20:04:26 <item4>	int main이란 함수인데
7 10 20:04:30 <dojun>	정수를 리턴하니까 되는구나!
7 10 20:04:32 <item4>	이 함수는 실행 후에 0이 결과로 나옵니다
7 10 20:04:38 <lyn>	아하...
7 10 20:04:44 <item4>	정수를 반환해주므로 main은 int가 맞습니다
7 10 20:04:59 <item4>	지금은 이정도로 이해하시구요
7 10 20:05:05 <lyn>	넵
7 10 20:05:09 <item4>	자세한건 함수 만드는 방법에 가서 정확한 설명을 드리겠습니다
7 10 20:05:30 <item4>	다른 질문은 없으신가요
7 10 20:06:07 <sz>	전 없습니다 ㅎㅎ
7 10 20:06:18 *	vLEE has quit (Quit: Page closed)
7 10 20:06:19 <lyn>	네
7 10 20:06:26 <item4>	없으시면 나머지 두줄도 후딱 해치우고 다음 단계로 나아가보겠습니다
7 10 20:06:33 <item4>	나머지 두줄도 일단 역할은 같습니다
7 10 20:06:38 <item4>	변수를 만드는것인데요
7 10 20:06:44 <item4>	다른것이 있다면 변수형이겠지요
7 10 20:07:08 <item4>	float b;
7 10 20:07:14 <item4>	float은 영단어로만 보면
7 10 20:07:18 *	UKNOW_ (dfc29979@web/*.*.*.*) has joined
7 10 20:07:18 *	ㅇㅈㅇ gives voice to UKNOW_
7 10 20:07:18 <item4>	떠있다는 단어인데요
7 10 20:07:34 <item4>	float에는 실수가 저장됩니다
7 10 20:07:52 <item4>	떠있는것과 실수가 무슨 관계인지는
7 10 20:08:03 <item4>	나중에 한참 뒤에가서 자료구조 들어가면 상세히 설명을 드리겠지만
7 10 20:08:04 *	UKNOW has quit (Ping timeout: 121 seconds)
7 10 20:08:07 <item4>	맛보기로 설명을 드리자면
7 10 20:08:17 <item4>	컴퓨터는 바보상자라서
7 10 20:08:30 <item4>	실수를 저장하기가 힘듭니다
7 10 20:08:39 <item4>	그래서 소숫점 위치를 맘대로 옮겨놓고 저장을 하는데요
7 10 20:08:47 <item4>	123.456을
7 10 20:08:58 *	UKNOW_ has quit (Quit: Page closed)
7 10 20:08:58 <item4>	1.23456*100으로 바꿉니다
7 10 20:09:04 <item4>	(대충 이런식으로)
7 10 20:09:06 *	UKNOW (6e4616d1@web/*.*.*.*) has joined
7 10 20:09:07 *	ㅇㅈㅇ gives voice to UKNOW
7 10 20:09:20 <item4>	.의 위치가 붕 떠서 이동하는것같으므로
7 10 20:09:28 <item4>	float이 실수.. 정도로 기억하시면 됩니다
7 10 20:09:51 <item4>	참고로 float이 나온 이름의 어원은 floating point number, 부동소숫점의 약자입니다
7 10 20:10:08 <item4>	그다음은 char입니다
7 10 20:10:46 <item4>	character의 약자이고
7 10 20:10:56 <item4>	단어 뜻 그대로 '문자'를 저장합니다
7 10 20:11:20 <item4>	여기서 말하는 문자라는것은
7 10 20:11:27 <item4>	좀 더 엄밀히 말하면 1바이트에 해당합니다
7 10 20:11:43 <item4>	초중고등학교 컴퓨터시간 수업을 열심히 들었거나
7 10 20:11:52 <item4>	워드 자격증등을 따려고 하셨거나 하셨다면
7 10 20:11:58 <item4>	영어숫자는 1바이트
7 10 20:12:04 <item4>	한문한글은 2바이트 라는 설명을
7 10 20:12:09 <item4>	한번쯤은 들어보셨을겁니다
7 10 20:12:34 <item4>	언제나 이게 성립하는건 아니지만서도
7 10 20:12:41 <item4>	일단 영어,숫자는 1바이트가 맞습니다
7 10 20:12:52 <item4>	char형 변수에는 이런것들이 들어갈 수 있습니다
7 10 20:12:58 <item4>	여기까지 이해 되셨나요?
7 10 20:13:09 <sz>	네~
7 10 20:13:09 <dojun>	그럼 한글은 안된다는 말씀이시져?
7 10 20:13:33 <lyn>	float은 정수도 포함하는 거겠죠?
7 10 20:13:50 <dojun>	float은 정수도 포함하는걸로 알고있어요
7 10 20:13:59 <item4>	float형의 경우
7 10 20:14:04 <item4>	정수도 넣을 수 있습니다
7 10 20:14:14 <item4>	그런데, int형의 정수 표현보단 좀 좁습니다
7 10 20:14:21 <item4>	자세한건 자료구조로 가보면 알 수 있습니다
7 10 20:14:34 <item4>	(한참 뒤라는게 문제지만..)
7 10 20:14:48 <lyn>	넵
7 10 20:15:28 <item4>	그럼 이제
7 10 20:15:30 <item4>	자료를 저장해봅시다
7 10 20:15:34 *	코딩좋앙 (FIRC@*.*.*.*) has joined
7 10 20:15:34 *	ㅇㅈㅇ gives voice to 코딩좋앙
7 10 20:15:44 <코딩좋앙>	하고 있는 건가요?
7 10 20:16:00 <item4>	네. 진행중입니다
7 10 20:16:16 <item4>	소스를 이렇게 한번 고쳐보겠습니다
7 10 20:16:38 <item4>	http://codepad.org/gs85jHpz
7 10 20:17:01 *	코딩좋앙 has quit (Quit: IRC웹클라이언트 에프IRC를 종료하셨습니다. (http://www.firc.kr))
7 10 20:17:04 *	연지우 (FIRC@*.*.*.*) has joined
7 10 20:17:05 *	ㅇㅈㅇ gives voice to 연지우
7 10 20:17:14 <essential923>	고쳣습니다 ㅎㅎ
7 10 20:17:32 <dojun>	잠시~
7 10 20:17:41 <talkk>	따라는 가는데 뭐하는지 모르겠어 ㅠ.ㅠ
7 10 20:17:58 <item4>	모르겠는 부분은 질문해주세요
7 10 20:18:06 <dojun>	vim으로 하느라 조금 느리네여 ㅠㅠㅋㅋ
7 10 20:18:14 <dcdc>	근데 아까도 컴파일 안했는데... 지금도 그냥 놔두나요?
7 10 20:18:23 <dcdc>	저장해서 실행해야하는거죠?
7 10 20:18:23 <lyn>	했습니다
7 10 20:18:25 <item4>	네. 컴파일해서 실행해도 아무것도 안나오니
7 10 20:18:28 <item4>	그냥 두셔도 됩니다
7 10 20:18:31 <dcdc>	네
7 10 20:18:39 <item4>	talkk 님의 질문이신데
7 10 20:18:44 <item4>	출력을 만들어가고 있는거 맞습니다
7 10 20:18:51 <talkk>	저장해야하나요?
7 10 20:18:52 <dojun>	저도 다 했습니다~
7 10 20:19:01 <item4>	저장하고 컴파일 해야할때 말씀드릴게요
7 10 20:19:04 <talkk>	네
7 10 20:19:18 <item4>	위에 3줄을 변수를 선언했다고 하고
7 10 20:19:24 <item4>	이번엔 변수에 값을 대입했다고 합니다
7 10 20:19:32 <item4>	한번 보겠습니다
7 10 20:19:37 <item4>	a=123;
7 10 20:19:41 <item4>	수학시간이었다면
7 10 20:19:47 <item4>	a는 123과 같다
7 10 20:19:53 <item4>	라는 공식이 되겠지만
7 10 20:19:58 <item4>	프로그래밍에선 조금 다릅니다
7 10 20:20:13 <item4>	=는 대입연산자 라고 부르는데요
7 10 20:20:25 <item4>	좌변에 있는것에 우변에 있는것을 저장시킵니다
7 10 20:20:36 <item4>	a라는 변수(그릇)에다가 123을 넣는겁니다
7 10 20:21:02 <item4>	물론 다른 숫자도 넣을 수 있습니다
7 10 20:21:10 <item4>	여기까진 이해 되시나요
7 10 20:21:16 <dojun>	네네네~
7 10 20:21:18 <dcdc>	네
7 10 20:21:28 <essential923>	넵
7 10 20:21:36 <talkk>	네!
7 10 20:21:46 <item4>	문제라면 그 다음줄부터인데요
7 10 20:21:48 <item4>	b=45.6f;
7 10 20:21:56 <item4>	실수라고 했는데
7 10 20:22:02 <item4>	왠지 끝에 f가 붙어있습니다
7 10 20:22:18 <item4>	사실 이 f는 필요 없습니다
7 10 20:22:36 <item4>	그냥 b=45.6; 이라고 써도 동작에는 아무 문제가 없는데요
7 10 20:22:42 <item4>	이번에 굳이 한번 써본것은
7 10 20:22:54 <item4>	b=45.6f;와 b=45.6;이 살짝 다르기 때문입니다
7 10 20:23:13 <item4>	컴퓨터는 기본적으로
7 10 20:23:22 <item4>	자기가 가질 수 있는 가장 큰 유형으로 저장하려고 합니다
7 10 20:23:33 <item4>	실수의 경우에는
7 10 20:23:47 <item4>	4바이트를 차지하는 float형과 8바이트를 차지하는 double형이 있는데요
7 10 20:23:58 <item4>	별도의 표시가 없는 45.6 같은 경우는
7 10 20:24:04 <item4>	기본적으로 double형이라고 인식을 합니다
7 10 20:24:31 <item4>	f를 붙인 경우에는 float형이라고 강제로 정해준 경우가 되겠네요
7 10 20:24:44 <item4>	변수를 그릇이라고 말했는데
7 10 20:24:53 <item4>	큰 그릇에 있던걸 작은 그릇에 부으려고 하면
7 10 20:24:56 <item4>	넘칠 수 있듯
7 10 20:25:12 <item4>	대입하다보면 결과가 잘못 나올 수도 있습니다
7 10 20:25:33 <item4>	혹시라도 언제 필요할지 모르니 f를 붙이면 double이 아닌 float이 된다는걸 알아두기 위해 해본것입니다
7 10 20:26:03 <item4>	dojun님의 질문, double이 더 큰형인지 물어보셨는데
7 10 20:26:12 <item4>	float은 4바이트, double은 8바이트로
7 10 20:26:15 <item4>	2배 차이가 납니다
7 10 20:26:31 <dojun>	아 저 위에 써주셨구나!!;;
7 10 20:26:32 *	최호준 has quit (Ping timeout: 121 seconds)
7 10 20:26:53 <item4>	정확히 뭐가 다른건지는 지금 하면 어려우니 나중에.. 합시다
7 10 20:27:04 <item4>	그 다음번째 줄을 봅시다
7 10 20:27:14 <item4>	c='A';
7 10 20:27:35 <item4>	이번엔 홑따옴표로 감싸져있습니다
7 10 20:28:13 <item4>	왜 그냥 c=A 이렇게 안하느냐 하실수도 있지만
7 10 20:28:22 <item4>	그래서는 분간이 안갑니다
7 10 20:28:38 <item4>	예를들면 c에 =라는걸 저장하려고 하는데
7 10 20:28:44 <item4>	따옴표가 없이 됬었다면
7 10 20:28:49 <item4>	c==이 됬을텐데
7 10 20:29:04 <item4>	==라는 연산자도 존재합니다. 서로 분간이 안되죠
7 10 20:29:24 <item4>	문자를 저장할때는 이렇게 홑따옴표로 감싸줍니다
7 10 20:29:33 <item4>	여기까지 질문 있으신가요
7 10 20:29:55 <talkk>	없어용!
7 10 20:29:57 <talkk>	깔끔!
7 10 20:30:06 <item4>	dcdc님의 질문입니다
7 10 20:30:17 <item4>	왜 갑자기 4바이트 8바이트 하는 이야기가 나왔는지 물어봐주셨는데요
7 10 20:30:21 <dcdc>	없습니다.
7 10 20:30:22 <item4>	제가 설명을 깜빡한 부분입니다
7 10 20:30:34 <item4>	그릇에는 담을 수 있는 한도가 있습니다
7 10 20:30:43 <item4>	우리가 종이에 쓰려고 해도 종이가 부족할 수 있는것처럼
7 10 20:30:52 <item4>	그릇이 넘치게 되는 경우가 있을 수 있는데요
7 10 20:31:04 <item4>	컴퓨터의 변수도 담을 수 있는 공간이 한정되어 있습니다
7 10 20:31:26 <item4>	그래서, 하나의 변수는 담을 수 있는 공간이 정해져있습니다
7 10 20:31:32 <item4>	문자는 1바이트
7 10 20:31:38 <item4>	정수, 실수는 4바이트
7 10 20:31:42 <item4>	이런식으로 정해져있습니다
7 10 20:31:51 <talkk>	왜 정수가 더 크지;;?
7 10 20:31:51 <item4>	그 이상을 넣으려고 하면 문제가 생기겠죠
7 10 20:32:13 <lyn>	1바이트짜리 정보인데 double로 저장하면 괜히 8바이트나 차지하겠군요
7 10 20:32:24 <item4>	네. 
7 10 20:32:31 <lyn>	넵. 질문 없습니다
7 10 20:32:39 <item4>	그러므로 프로그래머는 어떤 변수형으로 저장해야 메모리가 덜 차지되는지도
7 10 20:32:43 <item4>	고려해볼 필요가 있습니다
7 10 20:32:58 <talkk>	그럼 카카오톡과 같은 트래픽 폭주는 
7 10 20:33:03 <talkk>	변수형도 생각하나요?
7 10 20:33:10 <talkk>	프로그램 만들때
7 10 20:33:33 <item4>	트래픽 폭주..는 약간 예가 다를지도 모르지만
7 10 20:33:40 <item4>	접속이 몰려서 발생하는 문제인데
7 10 20:33:40 <dojun>	메모리를 많이 차지하면 프로그램이 무거워지는거 아닌가요?
7 10 20:33:51 <dojun>	느리게 작동한다거나 그런거?
7 10 20:33:52 <item4>	그 접속을 최대한 빠르게 처리해야 부하가 감소하게 됩니다
7 10 20:34:10 <item4>	메모리를 많이써서라도 금방 끝난다면 그게 나을수도 있지만
7 10 20:34:17 <dcdc>	문자는 1바이트라고 했는데... 그럼 한글은 어떻게 되는거죠?
7 10 20:34:18 <item4>	그게 아니라면 조금쓰는편이 더 빠릅니다
7 10 20:34:46 <item4>	한글의 경우 그럼 어떻게 저장힐지가 궁금해지는 시점인데요
7 10 20:34:51 <item4>	한글은 2바이트입니다
7 10 20:35:02 <item4>	utf-8로가면 3바이트가 됩니다
7 10 20:35:10 <item4>	그럼, 한글은 어떻게 넣을까요
7 10 20:35:23 <item4>	정답부터 말하자면 한칸으로는 안된다 입니다.
7 10 20:35:30 <item4>	여러칸에 나누어서 넣습니다
7 10 20:35:35 <talkk>	아
7 10 20:35:37 <dcdc>	아...
7 10 20:35:47 <talkk>	줄 두개로요?
7 10 20:35:48 <dcdc>	그래서 글씨가 깨지는 것들이 간혹 나오는거군요... 
7 10 20:36:13 <item4>	자세한것은 문자열 이란것을 건드려보면서 설명드리겠습니다
7 10 20:36:18 <dcdc>	네
7 10 20:36:19 <dojun>	한글 한글자에 영문 두글자인거 말씀하시는거같은데...
7 10 20:36:37 <item4>	자, 그럼 이번엔
7 10 20:36:41 <item4>	살짝 소스를 고쳐보겠습니다
7 10 20:37:12 <item4>	http://codepad.org/U109NZbA
7 10 20:37:55 <dojun>	했습니다~
7 10 20:38:06 <talkk>	끝!
7 10 20:38:11 <essential923>	끝끝끝~
7 10 20:38:13 <item4>	이번엔 뭔가 이제까지 했던게
7 10 20:38:15 <dcdc>	끝
7 10 20:38:16 <item4>	섞인거 같습니다
7 10 20:38:17 <lyn>	넵
7 10 20:38:28 <talkk>	네
7 10 20:38:31 <item4>	보통 이렇게 하는걸 초기화 한다라고들 많이 합니다
7 10 20:38:40 <item4>	int a=123;
7 10 20:38:49 <item4>	이것 하나만 예를 들어드려도 나머진 이해되리라 봅니다
7 10 20:38:57 <item4>	int형 변수 a를 만듭니다
7 10 20:39:03 <item4>	그리고 그 값은 123으로 합니다
7 10 20:39:20 <item4>	변수를 선언함과 동시에
7 10 20:39:24 <item4>	값을 지정해주는 방법입니다
7 10 20:40:02 <item4>	소스는 언제나 간결한것이 보기 좋으므로
7 10 20:40:10 <item4>	이렇게 정리가 가능한 경우에는 정리하기도 합니다
7 10 20:40:45 <item4>	초기화는 사실 연산에 있어 꽤 중요한 부분이기도 한데요
7 10 20:41:01 <item4>	자세한건 반복문에 가서 보도록 하겠습니다
7 10 20:41:22 <item4>	그럼 이제, 실제로 이 값들을 출력해보도록 하겠습니다
7 10 20:42:20 <item4>	http://codepad.org/t5x67pJt
7 10 20:42:26 <item4>	소스를 이렇게 고쳐주시고
7 10 20:42:36 <item4>	저장한 후 컴파일 후 실행을 해보도록 하겠습니다
7 10 20:43:04 *	grimb (718317ca@web/*.*.*.*) has joined
7 10 20:43:05 *	ㅇㅈㅇ gives voice to grimb
7 10 20:43:49 <essential923>	컴파일 실행은 어떻게 하는건가요?;; 저번시간에 설명해주셧을거 같은데..
7 10 20:44:15 <드류드류>	F11이요~
7 10 20:44:29 <dojun>	45.6인데...
7 10 20:44:37 <dojun>	값이 다르넹
7 10 20:44:38 <essential923>	감사합이다 
7 10 20:44:40 <essential923>	니다
7 10 20:44:53 <item4>	파일명은 아무거나 하셔도 상관 없습니다
7 10 20:44:56 <talkk>	우와
7 10 20:44:58 <드류드류>	45.5999999999999
7 10 20:44:58 <talkk>	재밌네
7 10 20:45:13 <드류드류>	45.5999998 이네요;;
7 10 20:45:14 <lyn>	엇..... 5.4.2였나 다시 깔았는데 여전히 4.7.1로 뜨네요; 잘못깔았나; 이번에도 실행이 안되고...
7 10 20:45:25 <dojun>	저도 45.599998나오네요
7 10 20:45:26 <dcdc>	45.599998이 나오는데요?
7 10 20:45:30 <talkk>	저두
7 10 20:45:31 <item4>	뭔진 몰라도 길게 쓰고 나니
7 10 20:45:35 <item4>	결과가 나오는데
7 10 20:45:39 <item4>	뭔가 좀 이상합니다
7 10 20:45:41 <lyn>	5.4.2 맞는데...ㅡㅡ;
7 10 20:45:51 <item4>	lyn, 창이 바로 꺼지시나요
7 10 20:46:23 <lyn>	첫번째 창은 켜져있고, 도스같은 창은 아예 안켜져서 실행파일 누르니 깜빡하고 꺼집니다
7 10 20:46:44 <ellif_w7>	아 cmd에서 실행해 보셔야 해요
7 10 20:46:48 <item4>	컴파이링 제대로 됬는지 확인해보시고요
7 10 20:47:05 <lyn>	아 질문이요. 컴파일이란게 뭔지 모르겠어요. 컴파일이 뭔가요?
7 10 20:47:08 <item4>	Dev-C++ 5.4.2가 제대로 설치된건지 확인해주세요
7 10 20:47:13 <lyn>	실행방법 말고 저 개념을...
7 10 20:47:18 *	TrusT (TrusT@*.*.*.*) has joined
7 10 20:47:18 *	ㅇㅈㅇ gives voice to TrusT
7 10 20:47:22 <item4>	컴파일에 대한 질문이 오는데 지금 하는 부분 마치고 설명드리겠습니다
7 10 20:47:33 <lyn>	도움말에서 버전 확인하면 5.4.2로 뜹니다
7 10 20:47:52 <item4>	lyn, 일단 cmd창으로 프로그램 위치 찾아가서 켜보셔야 할 것 같구요
7 10 20:48:03 <item4>	수업 끝나고 프로그램 완전히 지우고 다시 한번 깔아보세요
7 10 20:48:29 <lyn>	아 뜨네요! 컴파일후 실행을 안누르고 컴파일만 눌러서 ㅎㅎㅎ;
7 10 20:48:41 <item4>	계속 진행하겠습니다
7 10 20:48:42 <talkk>	다행이네요 ㅎ
7 10 20:48:47 <item4>	이번에 추가된 줄은
7 10 20:48:55 <item4>	printf("a의 값은 %d입니다. b의 값은 %f입니다. c의 값은 %c입니다.",a,b,c);
7 10 20:48:56 <item4>	이고
7 10 20:49:01 <item4>	그 실행 결과는
7 10 20:49:06 <item4>		
7 10 20:49:06 <item4>	a의 값은 123입니다. b의 값은 45.599998입니다. c의 값은 A입니다.
7 10 20:49:08 <item4>	입니다
7 10 20:49:25 <item4>	추리를 해보건데
7 10 20:49:33 <item4>	%d, %f, %c 자리에
7 10 20:49:43 <item4>	변수들이 들어간것 같습니다
7 10 20:49:52 <item4>	그런데
7 10 20:49:58 <item4>	다들 보셨겠지만 b가 좀 이상합니다
7 10 20:50:05 <item4>	b의 값은 45.599998입니다.
7 10 20:50:09 <item4>	이렇게 나오는데요
7 10 20:50:13 <item4>	왜 이렇게 되었을까요
7 10 20:50:32 <dojun>	흠...
7 10 20:50:36 <talkk>	f 때문!
7 10 20:50:58 <item4>	이유는 컴퓨터가 바보상자이기 때문입니다
7 10 20:51:07 <lyn>	8바이트...네요
7 10 20:51:07 <item4>	컴퓨터는 내부적으로 
7 10 20:51:08 <dojun>	정확한 값이 안나오나 float은...
7 10 20:51:11 <item4>	2진수를 사용합니다
7 10 20:51:16 <item4>	2진수라고 함은
7 10 20:51:22 <item4>	0 아니면 1로만 저장을 한다는건데요
7 10 20:51:52 <item4>	정수는 뭐 말끔하게 처리가 가능합니다
7 10 20:51:57 <item4>	문제가 되는건 실수쪽인데요
7 10 20:52:01 <item4>	예를들어
7 10 20:52:08 <item4>	계산기에 1/3을 입력해봅시다
7 10 20:52:10 <item4>	!= 1/3
7 10 20:52:10 <냐옹이>	1 / 3 == 0.333333333
7 10 20:52:18 <item4>	우리는 1 나누기 3은
7 10 20:52:21 <item4>	분수라는걸 알지만
7 10 20:52:25 <item4>	컴퓨터는 0.33333...
7 10 20:52:29 <item4>	하고 알려줍니다
7 10 20:52:51 <item4>	컴퓨터는 1나누기 3을 저장하려고
7 10 20:52:56 <item4>	계속 2로 나누기 때문인데요
7 10 20:53:12 <item4>	2로 나눠서 저장하다보면
7 10 20:53:21 <item4>	정확하게 나누어떨어지지 않는 경우들이 생깁니다
7 10 20:53:38 <item4>	그러다보면 지금 b와 같이
7 10 20:53:46 <item4>	b의 값은 45.599998
7 10 20:53:50 <item4>	이런 형태가 되어버리곤 합니다
7 10 20:54:33 <item4>	음.. 설명이 좀 빈약한 느낌인데
7 10 20:54:35 <item4>	이해 되셨나요
7 10 20:54:43 <dcdc>	아뇨... ㅠㅠ
7 10 20:54:52 <talkk>	컴퓨터가 억지로 저장하려고 2로 나누어 끝내버린다
7 10 20:54:57 <talkk>	이 말씀이신가요?
7 10 20:55:05 <dojun>	2진수로 딱 안떨어지는 숫자들이 있어서 정확히 안나온다는 말씀이시죠??
7 10 20:55:16 <item4>	네. dojun 님 말씀대로입니다
7 10 20:55:22 <드류드류>	2로 나누는 데 왜 안 떨어질까요..ㅠㅠ
7 10 20:55:48 <item4>	먼저
7 10 20:55:55 <talkk>	2로 나누려는 건 2진수라서 그런가요?
7 10 20:55:58 <item4>	보다 손쉬운 예를 들기 위해
7 10 20:56:04 <item4>	1/3으로 진행을 해보겠습니다
7 10 20:56:13 <item4>	1/3은
7 10 20:56:22 <item4>	음;.. 어떻게 설명을 해야 좋을까요
7 10 20:56:30 <talkk>	천천히 생각하세요~ ㅎㅎ
7 10 20:56:45 <item4>	자, 종이에다가 
7 10 20:56:51 <item4>	1 나누기 3을 써놓고
7 10 20:56:54 <item4>	나누기를 해보시면
7 10 20:56:57 <item4>	0.333333
7 10 20:57:01 <item4>	이 나오는건 확인할 수 있습니다
7 10 20:57:22 <item4>	그럼, 컴퓨터는 이걸 어떻게 저장하느냐
7 10 20:57:30 <item4>	여기부터는 조금 어렵습니다
7 10 20:57:35 <item4>	너무 길면 어려우므로
7 10 20:57:41 <item4>	0.3까지만 해보겠습니다
7 10 20:58:15 <item4>	2로 나눈다.. 라고 설명을 드렸는데
7 10 20:58:25 <item4>	소숫점은 사실 2를 곱합니다
7 10 20:58:36 <item4>	이건 이산수학이라는 과목을 들어야 이해가 가능한데요
7 10 20:58:47 <item4>	지금은 맛보기니 가볍게 하겠습니다
7 10 20:58:56 <item4>	0.3 * 2는
7 10 20:58:59 <item4>	0.6입니다
7 10 20:59:07 <item4>	1의 자리가 0이므로
7 10 20:59:17 <item4>	2진수로 변환한 소수 첫째자리는 0입니다
7 10 20:59:20 <item4>	그다음
7 10 20:59:26 <item4>	0.6에 2를 곱합니다
7 10 20:59:33 <item4>	그럼 1.2가 나옵니다
7 10 20:59:46 <item4>	1의 자리가 1이므로 2진수로 변환한 소수 둘째자리는 1입니다
7 10 20:59:54 <item4>	다시 0.2에 2를 곱합니다
7 10 20:59:57 <item4>	그럼 0.4
7 10 21:00:04 <item4>	그다음은 0.8
7 10 21:00:08 <item4>	1.6
7 10 21:00:10 <item4>	0.6
7 10 21:00:14 <item4>	1.2
7 10 21:00:19 <item4>	... 가 반복됨을 알 수 있습니다
7 10 21:00:28 <item4>	그럼 소숫점으로는
7 10 21:01:03 <item4>	01000101...
7 10 21:01:04 <dcdc>	꼭 저희 그만듣고 나가라고 하는거 같아요... ㅡㅡ;; 
7 10 21:01:10 <item4>	이런식으로 반복되게 됩니다
7 10 21:01:11 <드류드류>	아.........................
7 10 21:01:17 <item4>	어려워서 일부러 설명을 피한 부분인데
7 10 21:01:29 <item4>	맛보기로만 
7 10 21:01:34 <item4>	보도록 합시다
7 10 21:01:38 <item4>	지금 보면 중요한건
7 10 21:01:38 <드류드류>	넵...!
7 10 21:01:41 <dcdc>	네
7 10 21:01:43 <item4>	무한 루프가 생긴다는 점입니다
7 10 21:01:50 <item4>	숫자가 똑떨어지지 않고
7 10 21:01:55 <item4>	줄줄이 계산을 하게 되는데요
7 10 21:02:01 <item4>	45.6의 경우도
7 10 21:02:06 <item4>	이런 방법으로 계산을 하다보면
7 10 21:02:12 <item4>	계속 빙빙도는 자리가 나오게 됩니다
7 10 21:02:27 <item4>	그리고 그 값은 환산해보면 9999
7 10 21:02:31 <item4>	이런 형태가 되어있습니다
7 10 21:02:38 <lyn>	아. 2진법으로 변환하다가 바이트문제로 적당히 끊고나서 다시 10진법으로 변환하면 아까 끊긴 부분들때문에 합성해도 소실되는 부분이 생긴다는 거죠?
7 10 21:02:45 <item4>	네. 정확합니다
7 10 21:03:15 <item4>	2진수로는 어떻게든 표현을 하려고
7 10 21:03:22 <talkk>	아 이해됬어요
7 10 21:03:22 <item4>	컴퓨터가 변수 범위 내에서 열심히 쑤셔 넣었는데
7 10 21:03:28 <item4>	그걸 다시 10진수로 되돌리려니까
7 10 21:03:31 <item4>	구멍이 나고 맙니다
7 10 21:03:38 <item4>	그 결과가 지금같이 나오는것입니다
7 10 21:04:06 <item4>	앞으로도 간간히 나올 부분이라 맛보기(?)로 설명을 드렸습니다
7 10 21:04:13 <item4>	앞으로 C를 좀 더 깊숙히 파고 들어가다보면
7 10 21:04:22 <item4>	이런것들을 만나볼 수 있습니다
7 10 21:04:51 <lyn>	그럼 정수에서 이런 문제가 발생하지 않는건, 정수는 적당히 소실되어도 결과표시할때 정수로 반올림하면 되니까 그런 건가요?
7 10 21:05:05 <item4>	점점 흐름이 자료구조로 가게되는 질문인데요
7 10 21:05:09 <lyn>	ㅎㅎㅎ;
7 10 21:05:15 <item4>	정수에서 이런 문제가 발생하지 않는건
7 10 21:05:22 <item4>	2로 나누어 떨어지기 때문입니다
7 10 21:05:35 <item4>	정수는 언젠가 나누어 떨어집니다
7 10 21:05:50 <item4>	(2진수로 변환하는 과정... 에서요)
7 10 21:06:11 <item4>	여기서 2로 나눈다, 2를 곱한다 이런 이야기가 나온건
7 10 21:06:13 <lyn>	456도 45.6도 끝없이 계속 나눠지던데요..
7 10 21:06:16 <item4>	컴퓨터가 2진수이기 때문입니다
7 10 21:06:29 <item4>	제가 나눈다.. 라고 말씀드린건
7 10 21:06:32 <dojun>	2진수로
7 10 21:06:34 <item4>	그냥 수학에서 나누기가 아니라
7 10 21:06:40 <item4>	2진수로 변환하는것을 말한겁니다
7 10 21:07:27 <item4>	2진수 변환은.. 중학교에 나오기는 하지만 컴퓨터에 써먹는건 대학교 와서 배우는 과정이고
7 10 21:07:47 <item4>	지금 설명드렸다간 여러분들이 다음시간부터 안오실것 같으므로 (...) 생략합니다
7 10 21:07:55 <lyn>	5를 2로 계속 나누면 2.5/1.25/0.625/0.3175/0.15875 하는식으로 계속 나눠지는데..
7 10 21:07:57 <lyn>	ㅎㅎㅎ
7 10 21:08:26 <dojun>	나누는게 2로 나누는게 아니구 2진수로 바꾸는거니까 5를 2진수로 바꾸면 101이죠
7 10 21:08:33 <item4>	2진수 변환은 이만 넘어가구요
7 10 21:08:33 <lyn>	아차
7 10 21:08:45 <item4>	printf("a의 값은 %d입니다. b의 값은 %f입니다. c의 값은 %c입니다.",a,b,c);
7 10 21:08:49 <item4>	이걸 보도록 하겠습니다
7 10 21:09:00 <item4>	이걸 실행한 결과가
7 10 21:09:06 <item4>	a의 값은 123입니다. b의 값은 45.599998입니다. c의 값은 A입니다
7 10 21:09:10 <item4>	이거인걸로 볼때
7 10 21:09:17 <item4>	%d는 123으로 바뀌었습니다
7 10 21:09:41 <item4>	정확히 짝을 지어보자면
7 10 21:09:53 <item4>	printf("a의 값은 %d입니다. b의 값은 %f입니다. c의 값은 %c입니다.",a,b,c);
7 10 21:09:59 <item4>	굵게 표시한것 보이시나요
7 10 21:10:04 <lyn>	네
7 10 21:10:12 <dcdc>	네
7 10 21:10:20 <talkk>	아 하나씩이구나
7 10 21:10:22 <talkk>	차례차례
7 10 21:10:22 <item4>	저기 있는 a가
7 10 21:10:28 <item4>	%d 자리에 들어갔습니다
7 10 21:10:49 <item4>	첫 시간에
7 10 21:10:52 <item4>	printf는
7 10 21:10:59 <item4>	print format의 약자라고 말씀을 드렸는데요
7 10 21:11:07 <item4>	여기서 format이라고 한것은
7 10 21:11:12 <item4>	%d 같은것을 두고 한 말입니다
7 10 21:11:27 <item4>	%d란
7 10 21:11:32 <item4>	decimal의 약자인데요
7 10 21:11:35 <item4>	10진수를 말합니다
7 10 21:11:48 <item4>	a를 10진수로 출력하게 되는거죠
7 10 21:11:54 <item4>	123을 10진수로 표현하면
7 10 21:11:59 <item4>	123이니까
7 10 21:12:08 <item4>	a의 값은 123입니다.
7 10 21:12:11 <item4>	라고 나왔습니다
7 10 21:12:17 <item4>	여기까진 이해 되시나요
7 10 21:12:21 <dojun>	넵
7 10 21:12:34 <item4>	그럼 다음 짝입니다
7 10 21:12:42 <talkk>	네
7 10 21:12:44 <dcdc>	네
7 10 21:12:49 <item4>	printf("a의 값은 %d입니다. b의 값은 %f입니다. c의 값은 %c입니다.",a,b,c);
7 10 21:13:03 <item4>	%f는 float을 말합니다
7 10 21:13:08 <item4>	실수를 출력해줍니다
7 10 21:13:31 <item4>	그래서 그 결과가
7 10 21:13:38 <item4>	b의 값은 45.599998입니다.
7 10 21:13:41 <item4>	라고 나온것입니다
7 10 21:13:57 <item4>	시키지도 않았는데 왜 이리 길게 나왔냐고 생각할 수 도 있는데
7 10 21:14:14 <item4>	이 나오는 길이는 조정이 가능합니다. 조정법에 대해선 조금 더 배우고 난 뒤에 다루도록 하겠습니다
7 10 21:14:43 <item4>	그 다음입니다
7 10 21:14:44 <item4>	c의 값은 A입니다.
7 10 21:14:48 <item4>	라고 나왔는데
7 10 21:15:02 <item4>	printf("a의 값은 %d입니다. b의 값은 %f입니다. c의 값은 %c입니다.",a,b,c);
7 10 21:15:04 <item4>	이렇게 짝입니다
7 10 21:15:18 <item4>	%c는 char형을 출력해줍니다
7 10 21:15:35 *	UKNOW has quit (Quit: Page closed)
7 10 21:15:41 <item4>	c의 char형 출력은 A이므로
7 10 21:15:45 <item4>	결과가 이렇게 나왔습니다
7 10 21:16:33 <item4>	자, 그럼 이제 본격적으로
7 10 21:16:40 <item4>	좀 쓸만한걸 만들어보도록 하겠습니다
7 10 21:16:44 <talkk>	네
7 10 21:17:42 <item4>	먼저, 간단한 계산을 해보도록 하겠습니다
7 10 21:19:29 <talkk>	?
7 10 21:19:31 <item4>	http://codepad.org/IX4VToVP
7 10 21:19:39 <item4>	이 소스를 다른 파일에 타이핑 해주세요
7 10 21:19:43 <talkk>	네
7 10 21:21:22 <dojun>	컴파일하고 실행시키나요?
7 10 21:21:30 <item4>	네. 컴파일하고 실행시켜보세요
7 10 21:21:42 <ellif_w7>	질문
7 10 21:21:45 <sz>	했습니다 0이나오네요 ㄷㄷ
7 10 21:21:48 <talkk>	0이래요
7 10 21:21:51 <item4>	ellif_w7, 말씀하세요
7 10 21:22:15 <dcdc>	0이라고 나옵니다.
7 10 21:22:21 <dojun>	정수형이라서 0이라고 나오나
7 10 21:22:36 <item4>	자, 이 소스에는
7 10 21:22:36 <talkk>	십진수 decimal이라서 0인가부다
7 10 21:22:39 <item4>	문제점이 많습니다
7 10 21:22:50 <item4>	문제를 하나씩 해결해나가봅시다
7 10 21:22:53 <ellif_w7>	printf("%d / %d = %d",var1,var2,var3) 이라고도 할 수 있나요?
7 10 21:22:59 <item4>	ellif_w7, 가능합니다
7 10 21:23:14 <item4>	이번에 그렇게 안한것은 var3의 값에 주목하기 위해서였습니다
7 10 21:23:22 <ellif_w7>	아.
7 10 21:23:38 <item4>	자, 일단 가장 의심스러운 부분은
7 10 21:23:47 <item4>	%d, 그러니까 10진수 정수로 출력을 했으니
7 10 21:23:53 <item4>	소수점이 안나온것 같아 보입니다
7 10 21:24:02 <item4>	그럼 이걸 %f로 바꾸고 실행해봅시다
7 10 21:24:31 <dcdc>	0.000000
7 10 21:24:49 <talkk>	0.0000
7 10 21:24:50 <item4>	2 나누기 3은 0.666666 입니다
7 10 21:24:56 <item4>	왜 0.00000이 나올까요
7 10 21:25:16 <dojun>	int라서 그런거같아요
7 10 21:25:23 <dojun>	var3가 정수형인데
7 10 21:25:36 <dojun>	나누면 정수가 안나오니까
7 10 21:25:40 <item4>	이번엔 var3이 수상해보입니다
7 10 21:25:50 <item4>	var3을 float형으로 바꿔보겠습니다
7 10 21:26:09 <item4>	바꾸시고 컴파일 후 실행해주세요
7 10 21:26:20 <dojun>	음
7 10 21:26:36 <talkk>	0.0000
7 10 21:26:37 <dojun>	그래도 0.00000나오네여
7 10 21:26:55 <ellif_w7>	그래도 0이 나오네요
7 10 21:27:20 <item4>	아무래도 원인은 이것도 아니었나봅니다
7 10 21:27:31 <item4>	그 원인을 이제는 공개를 해야할 것 같습니다
7 10 21:27:41 <item4>	var3=var1/var2;
7 10 21:27:51 <dojun>	정수형을 나눘는데 float에다가 넣어서 그런가...
7 10 21:27:53 <item4>	var1은 2고 var2는 3이니까
7 10 21:27:59 <item4>	var3=2/3;
7 10 21:28:04 <item4>	이라고 쓸 수도 있겠습니다
7 10 21:28:15 <item4>	그럼 우리의 예상은
7 10 21:28:24 <item4>	var3=0.666666;
7 10 21:28:27 <item4>	이 되어주는것인데
7 10 21:28:27 <연지우>	var3 가 정수형으로 선언되어 있어서 그런거아닌가요?.? 히히히
7 10 21:28:38 <item4>	컴퓨터는 그렇게 해주지 않고 있습니다
7 10 21:28:45 <item4>	그 이유는 바로
7 10 21:28:51 <ellif_w7>	연지우, float로 바꾸어도 문제가 발생하고 있어요.
7 10 21:28:57 <item4>	var1,var2 둘 다 int형이기 때문입니다
7 10 21:29:13 <item4>	int, 그러니까 정수에는
7 10 21:29:17 <item4>	소숫점이라는 개념이 없습니다
7 10 21:29:24 <item4>	따라서, 소숫점을 붙여도 다 버립니다
7 10 21:29:26 <talkk>	아
7 10 21:29:30 <talkk>	아하
7 10 21:29:39 <item4>	var1도 정수이고
7 10 21:29:41 <lyn>	아하...
7 10 21:29:43 <item4>	var2도 정수이기때문에
7 10 21:29:54 <item4>	정수 나누기 정수는
7 10 21:29:58 <item4>	정수로 나오고
7 10 21:30:00 <item4>	그 결과
7 10 21:30:05 <item4>	0.6666에서 소숫점을 버린
7 10 21:30:08 <item4>	0이 나온겁니다
7 10 21:30:41 <item4>	자, 그럼 이걸 어떻게 해야
7 10 21:30:47 <item4>	우리가 원하는 값이 나오게 할 수 있을까요
7 10 21:31:12 <lyn>	아... int로는 답이 정수만 나오는 계산만 할 수 있구나 ㅡㅡ;;
7 10 21:31:15 <dojun>	var1,var2를 float으로 바꿔야될꺼같아요
7 10 21:31:18 <ellif_w7>	모두 float로 바꾸고 앞의 %d도 %f로 바꾸어야 하더라고요.
7 10 21:31:40 <item4>	먼저, 모두 float으로 바꾸면 당연히 될 것 입니다
7 10 21:31:51 <item4>	하지만 var1, var2의 변수형을 바꿀 수 없는 상황이라고 가정해보겠습니다
7 10 21:31:54 *	T_T_T has quit (Ping timeout: 121 seconds)
7 10 21:32:05 <talkk>	2/3을 바꿔줍니다!
7 10 21:32:08 <item4>	그 상황에선 어떻게 해야할까요
7 10 21:32:12 <item4>	네, 맞습니다
7 10 21:32:15 <talkk>	야호!
7 10 21:32:17 <item4>	2/3을 무언가 수를 써서
7 10 21:32:20 <item4>	바꿔주는겁니다
7 10 21:32:27 <item4>	이걸 타입 캐스팅, 즉 형변환이라고 합니다
7 10 21:32:58 <item4>	http://codepad.org/iTr5qY3l
7 10 21:33:06 <item4>	모두 소스를 이렇게 바꿔주세요
7 10 21:33:48 <dojun>	아 되네요!
7 10 21:33:54 <talkk>	됬다
7 10 21:33:54 <lyn>	나오네요
7 10 21:33:55 <dojun>	JSP에서 쓰던거랑 비슷하네...
7 10 21:34:14 <item4>	이번에 추가로 생긴건
7 10 21:34:21 <item4>	(float)
7 10 21:34:23 <item4>	입니다
7 10 21:34:26 <talkk>	네
7 10 21:34:28 <item4>	이것은 형변환 연산자라고 하는데요
7 10 21:34:34 <talkk>	아!
7 10 21:34:35 <item4>	뒤에 있는 변수를
7 10 21:34:40 <item4>	변수형을 바꿔줍니다
7 10 21:34:45 <talkk>	굳굳
7 10 21:34:54 <item4>	그럼 이제
7 10 21:34:59 <item4>	정수/실수가 되었습니다
7 10 21:35:03 <item4>	컴퓨터는 계산할때
7 10 21:35:17 <item4>	정수끼리의 계산은 정수로 하지만
7 10 21:35:26 <item4>	계산에 실수(float)이 섞이면
7 10 21:35:38 <item4>	정수를 실수로 바꿔서 계산합니다
7 10 21:35:56 <talkk>	그럼 앞에 넣어도 되겠네요?
7 10 21:35:59 <item4>	네
7 10 21:36:11 <item4>	var3=(float)var1/var2;
7 10 21:36:13 <item4>	이렇게 해도
7 10 21:36:18 <item4>	동일한 결과를 얻을 수 있습니다
7 10 21:36:40 <item4>	이제 우린 나누기를 배웠습니다
7 10 21:36:57 <item4>	이제, 오늘의 과제 시간입니다
7 10 21:37:00 <item4>	새 파일을 만들어주세요
7 10 21:38:15 <talkk>	? 어떤? 새파일?
7 10 21:38:21 <item4>	새 소스파일이요
7 10 21:38:24 <talkk>	아 네
7 10 21:38:57 <item4>	베이스가 될 소스는
7 10 21:38:58 <item4>	http://codepad.org/MSIrdF4o
7 10 21:39:00 <item4>	이것입니다
7 10 21:39:39 <item4>	이번에 우리가 만들어볼것은 섭씨 온도를 화씨 온도로 바꾸는 프로그램입니다
7 10 21:39:52 <item4>	다음 시간에도 연장선으로 쓰일것이니 이번 과제는 꼭 해오셔야합니다
7 10 21:40:04 <dojun>	네엡!
7 10 21:40:08 <드류드류>	넵!!!
7 10 21:40:13 <lyn>	네 ㅋ
7 10 21:40:18 <talkk>	네
7 10 21:40:22 <talkk>	선생님 화나셨당
7 10 21:40:23 <item4>	섭씨를 화씨로 바꾸는 공식은
7 10 21:40:31 <item4>	°F = °C × 1.8 + 32 입니다
7 10 21:40:44 <item4>	저는 변수 C에 섭씨 온도를 저장해놨고
7 10 21:40:51 <item4>	화씨 온도는 F에 저장할 것입니다
7 10 21:41:04 <item4>	과제는
7 10 21:41:13 <item4>	변수 F에다가
7 10 21:41:24 <item4>	섭씨 C를 화씨로 변환해서 저장하고
7 10 21:41:35 <item4>	섭씨 100도는 화씨 ?도입니다.
7 10 21:41:40 <item4>	라고 출력하는 프로그램을 만들어오세요
7 10 21:41:47 <talkk>	네!
7 10 21:41:49 <item4>	오늘 배운걸 모두 활용하면 됩니다
7 10 21:41:55 <드류드류>	넵-!!!!
7 10 21:41:58 <연지우>	넹 수고하셨어요/!!!
7 10 21:42:00 <talkk>	계산 환산은 인터넷 참고해도 되죠?
7 10 21:42:07 <essential923>	수고하셧습니다^^
7 10 21:42:09 <dojun>	넵넵
7 10 21:42:11 <dojun>	수고하셨습니다~~~
7 10 21:42:15 <lyn>	질문이요 ㅋㅋ 컴파일이 뭔가요
7 10 21:42:18 <item4>	계산 공식은 인터넷 찾아보셔도 되구요
7 10 21:42:23 <item4>	자, 오늘 수업의 마지막은
7 10 21:42:23 <talkk>	네!
7 10 21:42:28 <item4>	많은 질문이 들어온
7 10 21:42:32 <item4>	'컴파일이란 무엇인가'
7 10 21:42:36 <item4>	로 마무리 짓겠습니다
7 10 21:42:38 <talkk>	네
7 10 21:42:49 <item4>	매번 강조하지만
7 10 21:42:52 <item4>	컴퓨터는 바보상자입니다
7 10 21:43:00 <item4>	우리가 하는 말을 알아듣지 못합니다
7 10 21:43:14 <item4>	컴퓨터가 알아들을 수 있는 말은 오직 기계어 뿐인데요
7 10 21:43:27 <item4>	우리가 일상적으로 하는 말과 기계어는 너무나도 거리가 멉니다
7 10 21:43:34 *	kai has quit (Quit: Page closed)
7 10 21:43:39 <item4>	그래서 프로그래밍 언어라는게 생겼습니다
7 10 21:43:48 <item4>	우리가 프로그래밍 언어로 작성을 하면
7 10 21:43:54 <item4>	컴파일러라는 프로그램이 
7 10 21:43:59 <item4>	프로그래밍 언어로 작성한것을
7 10 21:44:16 <item4>	기계어 비스무리한것으로 바꿔줍니다
7 10 21:44:26 <item4>	그 다음에 링크라는 과정을 거치게 되는데요
7 10 21:44:38 <item4>	링크란건 간단히 말하면 그 기계어 비스무리한걸
7 10 21:44:46 <item4>	다른 프로그램들이랑 엮어서
7 10 21:44:59 <item4>	기계어로 변환되서 실행될 수 있게 해주는걸 말합니다
7 10 21:45:16 <item4>	우리가 컴파일 후 실행을 누르면
7 10 21:45:24 <item4>	전처리기 -> 컴파일 -> 링크
7 10 21:45:28 <item4>	라는 3가지 과정을 거친 후에
7 10 21:45:31 <item4>	실행이 되게 됩니다
7 10 21:45:35 <talkk>	아~
7 10 21:45:37 <item4>	전처리기.. 는 
7 10 21:45:42 <item4>	앞에 #붙어서 시작하는 줄들을
7 10 21:45:46 <item4>	처리해주는것을 말합니다
7 10 21:45:59 <item4>	전처리기에 대한것은 나중에 좀 더 상세히 다룰 기회가 있을것 같습니다
7 10 21:46:17 <item4>	컴파일이나 링크 같은것은 보다 전문적인 내용이 있지만
7 10 21:46:22 <item4>	역시 너무 어려운 내용이라 ㅠㅠ
7 10 21:46:29 <lyn>	ㅠㅠ
7 10 21:46:30 <item4>	다음 수업에 아무도 안오시는 결과를 낳을 수 있고 
7 10 21:46:32 <talkk>	ㅜㅠ
7 10 21:46:35 <lyn>	ㅋㅋㅋㅋ
7 10 21:46:49 <talkk>	수고많으셨어요 진짜 ㅎ
7 10 21:46:50 <item4>	무엇보다 저도 공부가 필요합니다. 저도 학교에서 교수님이 얼렁뚱땅 넘어가서 공부를 해야합니다
7 10 21:46:54 <드류드류>	이미 수학 공식이 나오면서 마음이 어려워....
7 10 21:47:02 <드류드류>	그래도 감사합니다^^
7 10 21:47:12 <mathieu>	오늘 살작 멘붕이 왔으나, 열심히 따라갈게요
7 10 21:47:25 <item4>	오늘 실수... 때문에 조금 어려웠을 수 있지만
7 10 21:47:30 <talkk>	아녜요 ㅎ
7 10 21:47:31 <item4>	앞으로는 포인터와 배열만 넘으면
7 10 21:47:38 <item4>	쑥쑥 넘어갈 수 있습니다
7 10 21:47:45 <talkk>	재밌는걸로요?
7 10 21:47:49 <talkk>	어떤걸로 넘어가요?
7 10 21:47:50 <item4>	네
7 10 21:48:03 <item4>	진짜 써먹을 수 있는 프로그램의 단계로 나아갈 수 있습니다
7 10 21:48:04 <talkk>	도돵체 프로그래밍은 어디에 써먹는건지;;
7 10 21:48:11 <talkk>	페이스북을 만든다면 어디에 ;;
7 10 21:48:18 <talkk>	서버는 저장할테고
7 10 21:48:26 <talkk>	웹페이지는 웹 만들테고
7 10 21:49:00 <item4>	자세한건 수업을 하다보면 진로(?)가 보일것 같습니다
7 10 21:49:01 <ellif_w7>	오케 됐다.
7 10 21:49:05 <talkk>	네
7 10 21:49:05 <item4>	과제 꼭 해와주세요
7 10 21:49:08 <ellif_w7>	과제 끝!
7 10 21:49:13 <드류드류>	네, 오늘 감사합니다-!!
7 10 21:49:16 <item4>	오늘 수업은 이걸로 마칩니다
7 10 21:49:20 <item4>	모두 수고하셨습니다. :)
7 10 21:49:22 <sz>	수고하셨습니다 :)
7 10 21:49:23 <ellif_w7>	이제 여기서 Input만 배우면 되겠네요
7 10 21:49:24 <ellif_w7>	ㅇㅅㅇ
7 10 21:49:30 <lyn>	과제 끝!
7 10 21:49:33 <ellif_w7>	고생하셨습니다.
7 10 21:49:43 <lyn>	고생하셨습니다 ㅋㅋ
7 10 21:49:47 <sz>	앗 과제 결과 어떻게 나오셨나요 ㅋㅋㅋㅋ
7 10 21:49:49 <item4>	----- 여기까지 공개됩니다. ------------------------------